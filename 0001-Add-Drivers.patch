From 5cfc420b9b68edf2a11d1041baa654b0bdeaf15e Mon Sep 17 00:00:00 2001
From: Bingru Tsai <ben_tsai@avalue.com.tw>
Date: Tue, 12 Aug 2014 16:43:43 +0800
Subject: [PATCH 01/20] Add Drivers.

    1. Add PenMount IDC and update driver
    2. eGalax deamon
    3. Can Bus init script
    4. Add TCA9555 in driver list
    5. Add Battery bq20z75 Driver
    6. Add RTC RX8010 Driver
    7. Add Resolution in ldb and lcd driver
        1. 800x480 (ldb)
        2. 800x600 (ldb)
        3. 1368x768 (ldb)
        4. 1920x1080 (lcd)
        5. 1280x720 (lcd)
---
 bootable/bootloader/uboot-imx/include/asm-arm/proc |   1 -
 device/fsl/common/input/Dell_Dell_USB_Keyboard.idc |  25 -
 device/fsl/common/input/Dell_Dell_USB_Keyboard.kl  |  86 ---
 .../common/input/PenMount_6000_USB_TouchScreen.idc |   5 +
 device/fsl/common/input/eGTouchD                   | Bin 0 -> 425864 bytes
 device/fsl/common/tools/can-bus                    |   4 +
 device/fsl/imx5x/imx5x.mk                          |   2 -
 device/fsl/imx6/BoardConfigCommon.mk               |   2 +-
 device/fsl/imx6/etc/ueventd.freescale.rc           |   7 +-
 device/fsl/imx6/imx6.mk                            |   2 -
 kernel_imx/arch/arm/Kconfig                        |   0
 kernel_imx/arch/arm/configs/imx5_defconfig         |   0
 kernel_imx/arch/arm/mach-mx6/board-mx6sl_arm2.c    |   0
 kernel_imx/arch/arm/mach-mx6/clock_mx6sl.c         |   0
 kernel_imx/drivers/gpio/pca953x.c                  |   1 +
 kernel_imx/drivers/input/touchscreen/Kconfig       |  13 +
 kernel_imx/drivers/input/touchscreen/Makefile      |   3 +-
 .../drivers/input/touchscreen/da9052_tsi_filter.c  |   0
 kernel_imx/drivers/input/touchscreen/max11801_ts.c |   0
 .../drivers/input/touchscreen/penmount-module.c    | 746 ++++++++++++++++++++
 .../drivers/input/touchscreen/penmount-serio.c     | 348 +++++++++
 .../drivers/input/touchscreen/penmount-usb.c       | 309 ++++++++
 kernel_imx/drivers/input/touchscreen/penmount.h    | 143 ++++
 kernel_imx/drivers/net/fec.c                       |   0
 kernel_imx/drivers/power/Kconfig                   |   7 +
 kernel_imx/drivers/power/Makefile                  |   1 +
 kernel_imx/drivers/power/bq20z75-android.c         | 726 +++++++++++++++++++
 kernel_imx/drivers/power/max8903_battery.c         |   0
 kernel_imx/drivers/power/sabresd_battery.c         |   0
 kernel_imx/drivers/rtc/Kconfig                     |   6 +
 kernel_imx/drivers/rtc/Makefile                    |   2 +
 kernel_imx/drivers/rtc/rtc-da9052.c                |   0
 kernel_imx/drivers/rtc/rtc-rx8010.c                | 785 +++++++++++++++++++++
 kernel_imx/drivers/video/mxc/ldb.c                 |  20 +
 kernel_imx/drivers/video/mxc/mxc_lcdif.c           |  15 +
 35 files changed, 3135 insertions(+), 124 deletions(-)
 delete mode 120000 bootable/bootloader/uboot-imx/include/asm-arm/proc
 delete mode 100644 device/fsl/common/input/Dell_Dell_USB_Keyboard.idc
 delete mode 100644 device/fsl/common/input/Dell_Dell_USB_Keyboard.kl
 create mode 100644 device/fsl/common/input/PenMount_6000_USB_TouchScreen.idc
 create mode 100755 device/fsl/common/input/eGTouchD
 create mode 100755 device/fsl/common/tools/can-bus
 mode change 100755 => 100644 kernel_imx/arch/arm/Kconfig
 mode change 100755 => 100644 kernel_imx/arch/arm/configs/imx5_defconfig
 mode change 100755 => 100644 kernel_imx/arch/arm/mach-mx6/board-mx6sl_arm2.c
 mode change 100755 => 100644 kernel_imx/arch/arm/mach-mx6/clock_mx6sl.c
 mode change 100755 => 100644 kernel_imx/drivers/input/touchscreen/Kconfig
 mode change 100755 => 100644 kernel_imx/drivers/input/touchscreen/Makefile
 mode change 100755 => 100644 kernel_imx/drivers/input/touchscreen/da9052_tsi_filter.c
 mode change 100755 => 100644 kernel_imx/drivers/input/touchscreen/max11801_ts.c
 create mode 100644 kernel_imx/drivers/input/touchscreen/penmount-module.c
 create mode 100644 kernel_imx/drivers/input/touchscreen/penmount-serio.c
 create mode 100644 kernel_imx/drivers/input/touchscreen/penmount-usb.c
 create mode 100644 kernel_imx/drivers/input/touchscreen/penmount.h
 mode change 100755 => 100644 kernel_imx/drivers/net/fec.c
 mode change 100755 => 100644 kernel_imx/drivers/power/Kconfig
 mode change 100755 => 100644 kernel_imx/drivers/power/Makefile
 create mode 100644 kernel_imx/drivers/power/bq20z75-android.c
 mode change 100755 => 100644 kernel_imx/drivers/power/max8903_battery.c
 mode change 100755 => 100644 kernel_imx/drivers/power/sabresd_battery.c
 mode change 100755 => 100644 kernel_imx/drivers/rtc/Kconfig
 mode change 100755 => 100644 kernel_imx/drivers/rtc/Makefile
 mode change 100755 => 100644 kernel_imx/drivers/rtc/rtc-da9052.c
 create mode 100644 kernel_imx/drivers/rtc/rtc-rx8010.c

diff --git a/bootable/bootloader/uboot-imx/include/asm-arm/proc b/bootable/bootloader/uboot-imx/include/asm-arm/proc
deleted file mode 120000
index c7f3c20..0000000
--- a/bootable/bootloader/uboot-imx/include/asm-arm/proc
+++ /dev/null
@@ -1 +0,0 @@
-proc-armv
\ No newline at end of file
diff --git a/device/fsl/common/input/Dell_Dell_USB_Keyboard.idc b/device/fsl/common/input/Dell_Dell_USB_Keyboard.idc
deleted file mode 100644
index 02cbfc4..0000000
--- a/device/fsl/common/input/Dell_Dell_USB_Keyboard.idc
+++ /dev/null
@@ -1,25 +0,0 @@
-# Copyright (C) 2010 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-touch.deviceType = touchScreen
-touch.orientationAware = 1
-
-keyboard.layout = Dell_Dell_USB_Keyboard
-keyboard.characterMap = Generic
-keyboard.orientationAware = 1
-keyboard.builtIn = 0
-
-cursor.mode = navigation
-cursor.orientationAware = 1
diff --git a/device/fsl/common/input/Dell_Dell_USB_Keyboard.kl b/device/fsl/common/input/Dell_Dell_USB_Keyboard.kl
deleted file mode 100644
index 73d7022..0000000
--- a/device/fsl/common/input/Dell_Dell_USB_Keyboard.kl
+++ /dev/null
@@ -1,86 +0,0 @@
-key 399   GRAVE
-key 2     1
-key 3     2
-key 4     3
-key 5     4
-key 6     5
-key 7     6
-key 8     7
-key 9     8
-key 10    9
-key 11    0
-key 1     BACK              WAKE_DROPPED
-key 230   SOFT_RIGHT        WAKE
-key 60    SOFT_RIGHT        WAKE
-key 107   ENDCALL           WAKE
-key 62    ENDCALL           WAKE
-key 64    ENDCALL           WAKE
-key 127   MENU              WAKE
-key 59    MENU              WAKE
-key 228   POUND
-key 227   STAR
-key 231   CALL              WAKE
-key 61    CALL              WAKE
-key 67    DPAD_CENTER
-key 108   DPAD_DOWN
-key 103   DPAD_UP
-key 66    HOME              WAKE
-key 105   DPAD_LEFT
-key 106   DPAD_RIGHT
-key 115   VOLUME_UP
-key 114   VOLUME_DOWN
-key 116   POWER             WAKE
-key 211   FOCUS
-key 212   CAMERA
-
-key 16    Q
-key 17    W
-key 18    E
-key 19    R
-key 20    T
-key 21    Y
-key 22    U
-key 23    I
-key 24    O
-key 25    P
-key 26    LEFT_BRACKET
-key 27    RIGHT_BRACKET
-key 43    BACKSLASH
-
-key 30    A
-key 31    S
-key 32    D
-key 33    F
-key 34    G
-key 35    H
-key 36    J
-key 37    K
-key 38    L
-key 39    SEMICOLON
-key 40    APOSTROPHE
-key 14    DEL
-        
-key 44    Z
-key 45    X
-key 46    C
-key 47    V
-key 48    B
-key 49    N
-key 50    M
-key 51    COMMA
-key 52    PERIOD
-key 53    SLASH
-key 28    ENTER
-        
-key 56    ALT_LEFT
-key 42    SHIFT_LEFT
-key 15    TAB
-key 57    SPACE
-key 150   EXPLORER
-key 155   ENVELOPE        
-
-key 12    MINUS
-key 13    EQUALS
-key 215   AT
-
-
diff --git a/device/fsl/common/input/PenMount_6000_USB_TouchScreen.idc b/device/fsl/common/input/PenMount_6000_USB_TouchScreen.idc
new file mode 100644
index 0000000..1df14ff
--- /dev/null
+++ b/device/fsl/common/input/PenMount_6000_USB_TouchScreen.idc
@@ -0,0 +1,5 @@
+device.internal = 1
+
+touch.deviceType = touchScreen
+touch.orientationAware = 1
+
diff --git a/device/fsl/common/input/eGTouchD b/device/fsl/common/input/eGTouchD
new file mode 100755
index 0000000000000000000000000000000000000000..169a916e0d2a92417d763085ce069519c76729fe
GIT binary patch
literal 425864
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
DX)13=

literal 0
HcmV?d00001

diff --git a/device/fsl/common/tools/can-bus b/device/fsl/common/tools/can-bus
new file mode 100755
index 0000000..c145689
--- /dev/null
+++ b/device/fsl/common/tools/can-bus
@@ -0,0 +1,4 @@
+#!/system/bin/sh
+ip link set can0 up type can bitrate 125000
+ip link set can1 up type can bitrate 125000
+
diff --git a/device/fsl/imx5x/imx5x.mk b/device/fsl/imx5x/imx5x.mk
index 3e83500..10cfceb 100644
--- a/device/fsl/imx5x/imx5x.mk
+++ b/device/fsl/imx5x/imx5x.mk
@@ -279,8 +279,6 @@ PRODUCT_PACKAGES += \
 PRODUCT_AAPT_CONFIG := normal xlarge mdpi
 
 PRODUCT_COPY_FILES +=	\
-	device/fsl/common/input/Dell_Dell_USB_Keyboard.kl:system/usr/keylayout/Dell_Dell_USB_Keyboard.kl \
-	device/fsl/common/input/Dell_Dell_USB_Keyboard.idc:system/usr/idc/Dell_Dell_USB_Keyboard.idc \
 	device/fsl/imx5x/init.rc:root/init.rc \
 	device/fsl/imx5x/layout_version:root/layout_version \
 	device/fsl/imx5x/apns-conf.xml:system/etc/apns-conf.xml \
diff --git a/device/fsl/imx6/BoardConfigCommon.mk b/device/fsl/imx6/BoardConfigCommon.mk
index 0982b26..95d3504 100644
--- a/device/fsl/imx6/BoardConfigCommon.mk
+++ b/device/fsl/imx6/BoardConfigCommon.mk
@@ -33,7 +33,7 @@ BOARD_MODEM_VENDOR := HUAWEI
 BOARD_MODEM_ID := EM750M
 BOARD_MODEM_HAVE_DATA_DEVICE := true
 BOARD_HAVE_IMX_CAMERA := true
-BOARD_HAVE_USB_CAMERA := false
+BOARD_HAVE_USB_CAMERA := true
 
 BUILD_WITHOUT_FSL_DIRECTRENDER := false
 BUILD_WITHOUT_FSL_XEC := true
diff --git a/device/fsl/imx6/etc/ueventd.freescale.rc b/device/fsl/imx6/etc/ueventd.freescale.rc
index 19b0b40..6c92d9d 100644
--- a/device/fsl/imx6/etc/ueventd.freescale.rc
+++ b/device/fsl/imx6/etc/ueventd.freescale.rc
@@ -1,5 +1,5 @@
 /dev/pmem_gpu             0660   system     graphics
-/dev/ttymxc4              0660   bluetooth  bluetooth
+/dev/ttymxc*              0660   system     system
 /dev/snd/*                0660   system     audio
 /dev/ttyUSB*              0640   radio      radio
 /dev/ttyACM*              0640   radio      radio
@@ -11,11 +11,6 @@
 /dev/mxc_ipu              0660   media      system
 /dev/mxc_vpu              0660   media      system
 /dev/uinput               0660   system     bluetooth
-/dev/ttymxc2              0660   system     gps
-/dev/ttya0                0660   system     gps
-/dev/ptya0                0660   system     gps
-/dev/ttya1                0660   system     gps
-/dev/ptya1                0660   system     gps
 /dev/ion                  0666   media      system
 /dev/graphics/galcore	  0666 	 system     graphics
 /dev/graphics/fb0         0660   system     graphics
diff --git a/device/fsl/imx6/imx6.mk b/device/fsl/imx6/imx6.mk
index 74f5772..2bba885 100644
--- a/device/fsl/imx6/imx6.mk
+++ b/device/fsl/imx6/imx6.mk
@@ -318,8 +318,6 @@ PRODUCT_PACKAGES += \
     charger
 
 PRODUCT_COPY_FILES +=	\
-	device/fsl/common/input/Dell_Dell_USB_Keyboard.kl:system/usr/keylayout/Dell_Dell_USB_Keyboard.kl \
-	device/fsl/common/input/Dell_Dell_USB_Keyboard.idc:system/usr/idc/Dell_Dell_USB_Keyboard.idc \
 	device/fsl/common/input/eGalax_Touch_Screen.idc:system/usr/idc/eGalax_Touch_Screen.idc \
 	device/fsl/common/input/eGalax_Touch_Screen.idc:system/usr/idc/HannStar_P1003_Touchscreen.idc \
 	device/fsl/common/input/eGalax_Touch_Screen.idc:system/usr/idc/Novatek_NT11003_Touch_Screen.idc \
diff --git a/kernel_imx/arch/arm/Kconfig b/kernel_imx/arch/arm/Kconfig
old mode 100755
new mode 100644
diff --git a/kernel_imx/arch/arm/configs/imx5_defconfig b/kernel_imx/arch/arm/configs/imx5_defconfig
old mode 100755
new mode 100644
diff --git a/kernel_imx/arch/arm/mach-mx6/board-mx6sl_arm2.c b/kernel_imx/arch/arm/mach-mx6/board-mx6sl_arm2.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/arch/arm/mach-mx6/clock_mx6sl.c b/kernel_imx/arch/arm/mach-mx6/clock_mx6sl.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/gpio/pca953x.c b/kernel_imx/drivers/gpio/pca953x.c
index 532f690..2d12f64 100644
--- a/kernel_imx/drivers/gpio/pca953x.c
+++ b/kernel_imx/drivers/gpio/pca953x.c
@@ -64,6 +64,7 @@ static const struct i2c_device_id pca953x_id[] = {
 	{ "pca6107", 8  | PCA953X_TYPE | PCA_INT, },
 	{ "tca6408", 8  | PCA953X_TYPE | PCA_INT, },
 	{ "tca6416", 16 | PCA953X_TYPE | PCA_INT, },
+	{ "tca9555", 16 | PCA953X_TYPE | PCA_INT, },
 	/* NYET:  { "tca6424", 24, }, */
 	{ }
 };
diff --git a/kernel_imx/drivers/input/touchscreen/Kconfig b/kernel_imx/drivers/input/touchscreen/Kconfig
old mode 100755
new mode 100644
index d02c72e..248f89d
--- a/kernel_imx/drivers/input/touchscreen/Kconfig
+++ b/kernel_imx/drivers/input/touchscreen/Kconfig
@@ -395,6 +395,19 @@ config TOUCHSCREEN_PENMOUNT
 	  To compile this driver as a module, choose M here: the
 	  module will be called penmount.
 
+config TOUCHSCREEN_USB_PENMOUNT
+	tristate "PenMount USB touchscreen"
+	depends on USB_ARCH_HAS_HCD
+	select USB
+	help
+	  Say Y here if you have a Penmount USB touchscreen connected to
+	  your system.
+
+	  If unsure, say N.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called usb-penmount.
+
 config TOUCHSCREEN_MIGOR
 	tristate "Renesas MIGO-R touchscreen"
 	depends on SH_MIGOR && I2C
diff --git a/kernel_imx/drivers/input/touchscreen/Makefile b/kernel_imx/drivers/input/touchscreen/Makefile
old mode 100755
new mode 100644
index 615b10e..2933051
--- a/kernel_imx/drivers/input/touchscreen/Makefile
+++ b/kernel_imx/drivers/input/touchscreen/Makefile
@@ -39,7 +39,8 @@ obj-$(CONFIG_TOUCHSCREEN_HP7XX)		+= jornada720_ts.o
 obj-$(CONFIG_TOUCHSCREEN_HTCPEN)	+= htcpen.o
 obj-$(CONFIG_TOUCHSCREEN_USB_COMPOSITE)	+= usbtouchscreen.o
 obj-$(CONFIG_TOUCHSCREEN_PCAP)		+= pcap_ts.o
-obj-$(CONFIG_TOUCHSCREEN_PENMOUNT)	+= penmount.o
+obj-$(CONFIG_TOUCHSCREEN_USB_PENMOUNT)	+= penmount.o
+penmount-objs += penmount-module.o penmount-usb.o penmount-serio.o
 obj-$(CONFIG_TOUCHSCREEN_S3C2410)	+= s3c2410_ts.o
 obj-$(CONFIG_TOUCHSCREEN_ST1232)	+= st1232.o
 obj-$(CONFIG_TOUCHSCREEN_STMPE)		+= stmpe-ts.o
diff --git a/kernel_imx/drivers/input/touchscreen/da9052_tsi_filter.c b/kernel_imx/drivers/input/touchscreen/da9052_tsi_filter.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/input/touchscreen/max11801_ts.c b/kernel_imx/drivers/input/touchscreen/max11801_ts.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/input/touchscreen/penmount-module.c b/kernel_imx/drivers/input/touchscreen/penmount-module.c
new file mode 100644
index 0000000..0633dac
--- /dev/null
+++ b/kernel_imx/drivers/input/touchscreen/penmount-module.c
@@ -0,0 +1,746 @@
+/*******************************************************
+ *
+ * PenMount TouchScreen Driver for Android
+ *
+ * Copyright (c) 2013 PenMount Touch Solutions <penmount@seed.net.tw>
+ *
+ *******************************************************/
+
+/*******************************************************
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the Free
+ * Software Foundation; either version 2 of the License, or (at your option)
+ * any later version.
+ *******************************************************/
+
+////////////////////////////////////////////////////////
+// Include
+////////////////////////////////////////////////////////
+#include <linux/module.h>
+#include <linux/uaccess.h>
+#include <linux/slab.h>
+#include <linux/version.h>
+#include <linux/proc_fs.h>
+#include <linux/input.h>
+#include <linux/serio.h>
+#include <linux/usb.h>
+#include "penmount.h"
+////////////////////////////////////////////////////////
+// Global Variable
+////////////////////////////////////////////////////////
+struct proc_dir_entry * PMDRIVER_PROCFS_DIRENTRY;
+////////////////////////////////////////////////////////
+// Define
+////////////////////////////////////////////////////////
+#define PMMODULE_DESC                    "PenMount Touchscreen Driver"
+#define PMDRIVER_PROCFS_DIRNAME          "PenMount"
+#define PMDRIVER_PROCFS_NODE_FEATURE     "HidFeatureReport"
+#define PMDRIVER_PROCFS_NODE_RELOADCALIB "ReloadCalib"
+#define PMDRIVER_PROCFS_NODE_ENABLECALIB "EnableCalib"
+#define PMDRIVER_PROCFS_PERMISSION ( S_IFREG | S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH )
+////////////////////////////////////////////////////////
+static int g_calibparam[7] =
+{
+	0,
+	0,
+	0,
+	0,
+	0,
+	0,
+	65536
+};
+module_param_array_named(calibparam, g_calibparam, int, NULL, 0644);
+MODULE_PARM_DESC(calibparam, "Calibration Data");
+////////////////////////////////////////////////////////
+// Timer
+////////////////////////////////////////////////////////
+static
+void pmDriver_TimerProcCMD(unsigned long data) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) data;
+
+	if (pPenMount == NULL)
+		return;
+
+        printk ("Process CMD TIMEOUT [0x%02X] !!!\n", pPenMount->bCmdMode);
+	pPenMount->bCmdMode = 0;
+	pPenMount->DataIndex = 0;
+	pPenMount->bPurgeData = 0;
+
+	return;
+}
+//------------------------------------------------------
+static
+void pmDriver_TimerProcPurgeComplete(unsigned long data) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) data;
+
+	if (pPenMount == NULL)
+		return;
+
+	pPenMount->bCmdMode = 0;
+	pPenMount->DataIndex = 0;
+	pPenMount->bPurgeData = 0;
+
+	return;
+}
+//------------------------------------------------------
+int pmDriver_WaitCMDResponse(struct strPENMOUNT *pPenMount) {
+	while (pPenMount->bCmdMode)
+		msleep(1);
+
+	return (pPenMount->bDataRdy);
+}
+//------------------------------------------------------
+void pmDriver_StartPurgeData(struct strPENMOUNT *pPenMount) {
+	pPenMount->bPurgeData = 1;
+	init_timer(&pPenMount->Timer);
+	pPenMount->Timer.function = pmDriver_TimerProcPurgeComplete;
+	pPenMount->Timer.data = ((unsigned long) pPenMount);
+	pPenMount->Timer.expires = jiffies + PMDRIVER_TIMEOUT_PURGEDATA; // 200ms
+	add_timer(&pPenMount->Timer);
+
+	return;
+}
+//------------------------------------------------------
+void pmDriver_WaitPurgeData(struct strPENMOUNT *pPenMount) {
+        printk ("[PENMOUNT] Purge Serial Data ... [START]\n");
+	while (pPenMount->bPurgeData)
+		msleep(1);
+
+        printk ("[PENMOUNT] Purge Serial Data ... [END]\n");
+	del_timer(&pPenMount->Timer);
+	return;
+}
+//------------------------------------------------------
+int pmDriver_TimerAddCMD(struct strPENMOUNT *pPenMount) {
+	init_timer(&pPenMount->Timer);
+	pPenMount->Timer.function = pmDriver_TimerProcCMD;
+ 	pPenMount->Timer.data = ((unsigned long) pPenMount);
+	pPenMount->Timer.expires = jiffies + PMDRIVER_TIMEOUT_GETRESPONSE; // 200ms
+	add_timer(&pPenMount->Timer);
+	return 0;
+}
+//------------------------------------------------------
+int pmDriver_TimerDelCMD(struct strPENMOUNT *pPenMount) {
+	del_timer(&pPenMount->Timer);
+	return 0;
+}
+//------------------------------------------------------
+int pmDriver_TimerReset(struct strPENMOUNT *pPenMount) {
+	del_timer(&pPenMount->Timer);
+	pPenMount->Timer.expires = jiffies + PMDRIVER_TIMEOUT_GETRESPONSE;
+	add_timer(&pPenMount->Timer);
+	return 0;
+}
+////////////////////////////////////////////////////////
+// Calibration
+////////////////////////////////////////////////////////
+int RawX = 0;
+int RawY = 0;
+int Model = 0;
+int ActiveRegionLeft = 0;
+int ActiveRegionRight = 1023;
+int ActiveRegionTop = 0;
+int ActiveRegionBottom = 1023;
+module_param(RawX, int, S_IRUSR | S_IRGRP | S_IROTH);
+module_param(RawY, int, S_IRUSR | S_IRGRP | S_IROTH);
+module_param(Model, int, S_IRUSR | S_IRGRP | S_IROTH);
+//------------------------------------------------------
+static
+int pmDevice_SendCommand(struct strPENMOUNT *pPenMount, unsigned char *pCommand,
+		unsigned char *pResponse) {
+	int rc = 1;
+
+	switch (pPenMount->pInputDev->id.bustype) {
+	case BUS_RS232:
+		pmSerIo_WriteCMD(pPenMount, pCommand);
+		if (pResponse == NULL)
+			break;
+		rc = pmSerIo_WaitACK(pPenMount, pResponse);
+		break;
+	case BUS_USB:
+		pmUsbIF_SetFeatureReport(pPenMount->USB.pDevice, pCommand,
+				PMDRIVER_SIZE_FEATUREREPORT);
+		if (pResponse == NULL)
+			break;
+		pmUsbIF_GetFeatureReport(pPenMount->USB.pDevice, pResponse,
+				PMDRIVER_SIZE_FEATUREREPORT);
+		break;
+	}
+	return rc;
+}
+//------------------------------------------------------
+static
+int pmDriver_LoadEEPROM_PM6000(struct strPENMOUNT *pPenMount,
+		unsigned char index, unsigned char *pData) {
+	unsigned char pCommand[PMDRIVER_SIZE_FEATUREREPORT];
+	unsigned char pResponse[PMDRIVER_SIZE_FEATUREREPORT];
+
+	if (pData == NULL)
+		return 0;
+
+	memset(pCommand, 0, PMDRIVER_SIZE_FEATUREREPORT);
+	memset(pResponse, 0, PMDRIVER_SIZE_FEATUREREPORT);
+
+	pCommand[0] = 0xF3;
+	pCommand[2] = index;
+
+	if (!pmDevice_SendCommand(pPenMount, pCommand, pResponse))
+		return 0;
+
+	pData[0] = pResponse[3];
+	pData[1] = pResponse[4];
+
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmDriver_LoadEEPROM_PM9000(struct strPENMOUNT *pPenMount,
+		unsigned char index, unsigned char *pData) {
+	unsigned char pCommand[PMDRIVER_SIZE_FEATUREREPORT];
+	unsigned char pResponse[PMDRIVER_SIZE_FEATUREREPORT];
+
+	if (pData == NULL)
+		return 0;
+
+	memset(pCommand, 0, PMDRIVER_SIZE_FEATUREREPORT);
+	memset(pResponse, 0, PMDRIVER_SIZE_FEATUREREPORT);
+
+	pCommand[0] = 0xD0 + (unsigned char) (index / 4);
+
+	if (!pmDevice_SendCommand(pPenMount, pCommand, pResponse))
+		return 0;
+
+	pData[0] = pResponse[1];
+	pData[1] = pResponse[2];
+	pData[2] = pResponse[3];
+	pData[3] = pResponse[4];
+
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmDriver_DisableDevice(struct strPENMOUNT *pPenMount) {
+	unsigned char pCommand[PMDRIVER_SIZE_FEATUREREPORT];
+	unsigned char pResponse[PMDRIVER_SIZE_FEATUREREPORT];
+
+	memset(pCommand, 0, PMDRIVER_SIZE_FEATUREREPORT);
+	memset(pResponse, 0, PMDRIVER_SIZE_FEATUREREPORT);
+
+	pCommand[0] = 0xF0;
+	if (!pmDevice_SendCommand(pPenMount, pCommand, pResponse))
+		return 0;
+
+	pmDriver_StartPurgeData(pPenMount);
+	pmDriver_WaitPurgeData(pPenMount);
+
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmDriver_EnableDevice(struct strPENMOUNT *pPenMount) {
+	unsigned char pCommand[PMDRIVER_SIZE_FEATUREREPORT];
+	unsigned char pResponse[PMDRIVER_SIZE_FEATUREREPORT];
+
+	memset(pCommand, 0, PMDRIVER_SIZE_FEATUREREPORT);
+	memset(pResponse, 0, PMDRIVER_SIZE_FEATUREREPORT);
+
+	pCommand[0] = 0xF1;
+	if (!pmDevice_SendCommand(pPenMount, pCommand, pResponse))
+		return 0;
+
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmDriver_LoadCalibData(struct strPENMOUNT *pPenMount) {
+	unsigned char EEPROM[128];
+	unsigned char i = 0;
+	unsigned char offset = 0;
+
+	pPenMount->Calib.mode = 0;
+	if ((g_calibparam[0]) && (g_calibparam[1]) && (g_calibparam[2])
+	&& (g_calibparam[3]) && (g_calibparam[4]) && (g_calibparam[5]) && (g_calibparam[6]))
+	{
+		memcpy (pPenMount->Calib.param, g_calibparam, sizeof(int)*7);
+		for (i = 0; i < 7; i++)
+			printk("[PENMOUNT] Default calibration parameter (%d) : %d\n", i,
+					pPenMount->Calib.param[i]);
+		pPenMount->Calib.bEnable = 1;
+		pPenMount->Calib.mode = PENMOUNT_CALIBMODE_TSLIB;
+	}
+
+	memset(EEPROM, 0, 128);
+	switch (pPenMount->Model) {
+	case PMDEVICE_MODEL_9000:
+		for (i = 0; i < 64; i += 4) {
+			if (!pmDriver_LoadEEPROM_PM9000(pPenMount, i, EEPROM + i)) {
+				printk(
+						"[PENMOUNT] Unable to load data from controller! Please check the cable connection!\n");
+				return 0;
+			}
+		}
+		break;
+	case PMDEVICE_MODEL_6000:
+		for (i = 0; i < 64; i += 2) {
+			if (!pmDriver_LoadEEPROM_PM6000(pPenMount, i, EEPROM + i)) {
+				printk(
+						"[PENMOUNT] Unable to load data from controller! Please check the cable connection!\n");
+				return 0;
+			}
+		}
+		break;
+	}
+
+	printk("[PENMOUNT] EEPROM Calib Mode : %d\n", EEPROM[1]);
+	switch (EEPROM[1]) {
+	case PENMOUNT_CALIBMODE_TSLIB:
+		pPenMount->Calib.bEnable = 1;
+		pPenMount->Calib.mode = PENMOUNT_CALIBMODE_TSLIB;
+		for (i = 0, offset = 0x0C; i < 7; i++, offset += 4) {
+			if (pPenMount->Model == PMDEVICE_MODEL_9000)
+			{
+				pPenMount->Calib.param[i] = ( EEPROM[offset] & 0x7F )
+						| ( ( EEPROM[offset+1] & 0x7F ) << 7 )
+						| ( ( EEPROM[offset+2] & 0x7F ) << 14 )
+						| ( ( EEPROM[offset+3] & 0x7F ) << 21 ) ;
+				if ( EEPROM[offset+3] & 0x40 ) // 7th bit is 1
+					pPenMount->Calib.param[i] |= 0xF0000000 ;
+			}
+			else
+			{
+				pPenMount->Calib.param[i] = *(int *) (EEPROM + offset);
+			}
+			printk("[PENMOUNT] Calibration parameter (%d) : %d\n", i,
+					pPenMount->Calib.param[i]);
+		}
+		break;
+	default:
+		if ((!g_calibparam[0]) && (!g_calibparam[1]) && (!g_calibparam[2])
+		&& (!g_calibparam[3]) && (!g_calibparam[4]) && (!g_calibparam[5]) && (!g_calibparam[6]))
+		{
+			pPenMount->Calib.bEnable = 0;
+			printk("[PENMOUNT] Driver calibration disabled !\n");
+		}
+		break;
+	}
+	return 1;
+}
+//------------------------------------------------------
+void pmDriver_CalibData(struct strPENMOUNT *pPenMount, unsigned short *pX,
+		unsigned short *pY) {
+	int xtemp = (int) *pX;
+	int ytemp = (int) *pY;
+
+	if (pPenMount->Calib.mode != PENMOUNT_CALIBMODE_TSLIB)
+		return;
+
+	if (!pPenMount->Calib.bEnable)
+		return;
+
+	*pX = (unsigned short) ((pPenMount->Calib.param[0]
+			+ pPenMount->Calib.param[1] * xtemp
+			+ pPenMount->Calib.param[2] * ytemp) / pPenMount->Calib.param[6]);
+	*pY = (unsigned short) ((pPenMount->Calib.param[3]
+			+ pPenMount->Calib.param[4] * xtemp
+			+ pPenMount->Calib.param[5] * ytemp) / pPenMount->Calib.param[6]);
+
+	if (*pX < 0)
+		*pX = 0;
+	else if (*pX > 1023)
+		*pX = 1023;
+
+	if (*pY < 0)
+		*pY = 0;
+	else if (*pY > 1023)
+		*pY = 1023;
+
+	return;
+}
+//------------------------------------------------------
+int pmDriver_CheckInsideAA (struct strPENMOUNT *pPenMount, unsigned short pX,
+		unsigned short pY) {
+
+	if (pX < ActiveRegionLeft)
+		return 0;
+	else if (pX > ActiveRegionRight)
+		return 0;
+
+	if (pY < ActiveRegionTop)
+		return 0;
+	else if (pY > ActiveRegionBottom)
+		return 0;
+
+	return 1;
+}
+////////////////////////////////////////////////////////
+// PROCFS
+////////////////////////////////////////////////////////
+static
+ssize_t pmDriver_ProcfsRead(struct file * pFile, char __user * pBufferUSR,
+		size_t cbData, loff_t * pOffset) {
+	struct strPENMOUNT *pPenMount = NULL;
+	unsigned char pBufferKRN[32];
+	ssize_t count = 0;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+	pPenMount = PDE_DATA(file_inode(pFile));
+#else
+	pPenMount = PDE(pFile->f_path.dentry->d_inode)->data;
+#endif
+
+	if ((pPenMount == NULL) || (pBufferUSR == NULL))
+		return -EINVAL;
+
+	if (*pOffset) // Means if data has already been read, stop reading
+		return 0;
+
+	switch (pPenMount->pInputDev->id.bustype) {
+	case BUS_RS232:
+		if (!pPenMount->bDataRdy)
+		{
+			printk("[PENMOUNT] Data not ready yet !\n");
+			return 0;
+		}
+		break;
+	case BUS_USB:
+		pmUsbIF_GetFeatureReport(pPenMount->USB.pDevice, pPenMount->pResponse,
+				PMDRIVER_SIZE_FEATUREREPORT);
+		break;
+	}
+
+	count = sprintf(pBufferKRN, "0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\n",
+			pPenMount->pResponse[0], pPenMount->pResponse[1],
+			pPenMount->pResponse[2], pPenMount->pResponse[3],
+			pPenMount->pResponse[4]);
+
+	memset (pBufferUSR, 0, cbData);
+	if (copy_to_user(pBufferUSR, pBufferKRN, count))
+		printk ("[PENMOUNT] Failed to copy data to user space\n");
+
+	pPenMount->bDataRdy=0;
+	*pOffset = cbData;
+
+	return count;
+}
+//------------------------------------------------------
+static
+ssize_t pmDriver_ProcfsWrite(struct file * pFile, const char __user * pBufferUSR,
+		size_t cbData, loff_t * pOffset) {
+
+	struct strPENMOUNT *pPenMount = NULL;
+	unsigned char pBufferKRN[32];
+	int rc = 0;
+	int i = 0;
+	unsigned int pData[6] = { 0, 0, 0, 0, 0, 0 };
+	unsigned char pCommand[6] = { 0, 0, 0, 0, 0, 0 };
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+	pPenMount = PDE_DATA(file_inode(pFile));
+#else
+	pPenMount = PDE(pFile->f_path.dentry->d_inode)->data;
+#endif
+
+	if ((pPenMount == NULL) || (pBufferUSR == NULL))
+		return -EINVAL;
+
+	rc = copy_from_user(pBufferKRN, pBufferUSR, cbData);
+	sscanf(pBufferKRN, "0x%02X 0x%02X 0x%02X 0x%02X 0x%02X", &pData[0], &pData[1],
+			&pData[2], &pData[3], &pData[4]);
+
+	for (i = 0; i < PMDRIVER_SIZE_FEATUREREPORT; i++)
+		pCommand[i] = pData[i];
+
+	switch (pPenMount->pInputDev->id.bustype) {
+	case BUS_RS232:
+		pmSerIo_WriteCMD(pPenMount, pCommand);
+		break;
+	case BUS_USB:
+		pmUsbIF_SetFeatureReport(pPenMount->USB.pDevice, pCommand,
+				PMDRIVER_SIZE_FEATUREREPORT);
+		break;
+	}
+
+	return cbData;
+}
+//------------------------------------------------------
+static
+ssize_t pmDriver_ReloadCalib(struct file * pFile, const char * pBuffer,
+		size_t count, loff_t * pOffset) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+	pPenMount = PDE_DATA(file_inode(pFile));
+#else
+	pPenMount = PDE(pFile->f_path.dentry->d_inode)->data;
+#endif
+
+	if ((pPenMount == NULL) || (pBuffer == NULL))
+		return -EINVAL;
+
+	printk("[PENMOUNT] Reloading calibration settings ...\n");
+	pmDriver_DisableDevice(pPenMount);
+	pmDriver_LoadCalibData(pPenMount);
+	pmDriver_EnableDevice(pPenMount);
+
+	return count;
+}
+//------------------------------------------------------
+static
+ssize_t pmDriver_EnableCalib(struct file * pFile, const char * pBufferUSR,
+		size_t cbData, loff_t * pOffset) {
+	struct strPENMOUNT *pPenMount = NULL;
+	int rc = 0;
+	unsigned char pBufferKRN[32];
+	signed int bEnable = 0;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+	pPenMount = PDE_DATA(file_inode(pFile));
+#else
+	pPenMount = PDE(pFile->f_path.dentry->d_inode)->data;
+#endif
+	if ((pPenMount == NULL) || (pBufferUSR == NULL))
+		return -EINVAL;
+
+	rc = copy_from_user(pBufferKRN, pBufferUSR, cbData);
+	sscanf(pBufferKRN, "%d", &bEnable);
+
+	if (bEnable)
+		printk("[PENMOUNT] Calibration is enabled !\n");
+	else
+		printk("[PENMOUNT] Calibration is disabled !\n");
+
+	pPenMount->Calib.bEnable = (unsigned char) bEnable;
+
+	return cbData;
+}
+//------------------------------------------------------
+static
+int pmDriver_Procfsmkdir(void) {
+	PMDRIVER_PROCFS_DIRENTRY = proc_mkdir(PMDRIVER_PROCFS_DIRNAME, NULL);
+	return 0;
+}
+//------------------------------------------------------
+static
+void pmDriver_Procfsrmdir(void) {
+	remove_proc_entry(PMDRIVER_PROCFS_DIRNAME, NULL);
+	return;
+}
+//------------------------------------------------------
+static const
+struct file_operations FileOps_HidReport = {
+         .owner          = THIS_MODULE,
+         .read           = pmDriver_ProcfsRead,
+         .write          = pmDriver_ProcfsWrite,
+};
+//------------------------------------------------------
+static const
+struct file_operations FileOps_ReloadCalib = {
+         .owner          = THIS_MODULE,
+         .write          = pmDriver_ReloadCalib,
+};
+//------------------------------------------------------
+static const
+struct file_operations FileOps_EnableCalib = {
+         .owner          = THIS_MODULE,
+         .write          = pmDriver_EnableCalib,
+};
+//------------------------------------------------------
+int pmDriver_ProcfsInit(struct strPENMOUNT * pPenMount) {
+
+	pPenMount->pProcfs = proc_create_data(PMDRIVER_PROCFS_NODE_FEATURE, PMDRIVER_PROCFS_PERMISSION, PMDRIVER_PROCFS_DIRENTRY, &FileOps_HidReport, pPenMount);
+
+	if (pPenMount->pProcfs == NULL)
+		return -ENOMEM;
+
+	pPenMount->Calib.pProcfsReload = proc_create_data(PMDRIVER_PROCFS_NODE_RELOADCALIB, PMDRIVER_PROCFS_PERMISSION, PMDRIVER_PROCFS_DIRENTRY, &FileOps_ReloadCalib, pPenMount);
+
+	if (pPenMount->Calib.pProcfsReload == NULL)
+		return -ENOMEM;
+
+	pPenMount->Calib.pProcfsEnable = proc_create_data(PMDRIVER_PROCFS_NODE_ENABLECALIB, PMDRIVER_PROCFS_PERMISSION, PMDRIVER_PROCFS_DIRENTRY, &FileOps_EnableCalib, pPenMount);
+
+	if (pPenMount->Calib.pProcfsEnable == NULL)
+		return -ENOMEM;
+
+	return 0;
+}
+//------------------------------------------------------
+void pmDriver_ProcfsExit(struct strPENMOUNT *pPenMount) {
+	remove_proc_entry(PMDRIVER_PROCFS_NODE_FEATURE, PMDRIVER_PROCFS_DIRENTRY);
+	remove_proc_entry(PMDRIVER_PROCFS_NODE_RELOADCALIB,
+			PMDRIVER_PROCFS_DIRENTRY);
+	remove_proc_entry(PMDRIVER_PROCFS_NODE_ENABLECALIB,
+			PMDRIVER_PROCFS_DIRENTRY);
+
+	return;
+}
+////////////////////////////////////////////////////////
+// InputDev
+////////////////////////////////////////////////////////
+int pmDriver_InputDevOpen(struct input_dev *pInputDev) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) input_get_drvdata(pInputDev);
+	if (pPenMount == NULL)
+		return -ENXIO;
+
+	if (pInputDev->id.bustype != BUS_USB)
+		return 0;
+
+	if (!pPenMount->OpenCount++) {
+		pPenMount->USB.pUrb->dev = pPenMount->USB.pDevice;
+		usb_submit_urb(pPenMount->USB.pUrb, GFP_KERNEL);
+	}
+
+	return 0;
+}
+//------------------------------------------------------
+void pmDriver_InputDevClose(struct input_dev *pInputDev) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) input_get_drvdata(pInputDev);
+
+	if (pPenMount == NULL)
+		return;
+
+	if (pInputDev->id.bustype != BUS_USB)
+		return;
+
+	if (!--pPenMount->OpenCount)
+		usb_kill_urb(pPenMount->USB.pUrb);
+
+	return;
+}
+//------------------------------------------------------
+struct strPENMOUNT * pmDriver_InitContext(void) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = kzalloc(sizeof(struct strPENMOUNT), GFP_KERNEL);
+	if (pPenMount == NULL)
+		return NULL;
+
+	return pPenMount;
+}
+//------------------------------------------------------
+int pmDriver_InputDevInit(struct strPENMOUNT *pPenMount,
+		struct device *pParentDev, struct input_id *pInputID) {
+	int rc = 0;
+	struct input_dev *pInputDev = NULL;
+
+	pInputDev = input_allocate_device();
+	if (pInputDev == NULL)
+		return -ENOMEM;
+
+	pInputDev->evbit[0] = BIT_MASK(EV_KEY) | BIT_MASK(EV_ABS);
+	pInputDev->keybit[BIT_WORD(BTN_TOUCH)] = BIT_MASK(BTN_TOUCH);
+	memcpy(&pInputDev->id, pInputID, sizeof(struct input_id));
+	pInputDev->id.version = PMDRIVER_VERSION;
+
+	Model = pInputDev->id.product;
+
+	input_set_abs_params(pInputDev, ABS_X, 0, 0x3FF, 0, 0);
+	input_set_abs_params(pInputDev, ABS_Y, 0, 0x3FF, 0, 0);
+	printk("[PENMOUNT] Registering input device for %s\n",
+			pPenMount->szDeviceName);
+
+	pInputDev->name = pPenMount->szDeviceName;
+	pInputDev->phys = pPenMount->szPhysDevice;
+
+	if (pInputDev->id.bustype == BUS_USB)
+	{
+		pInputDev->open = pmDriver_InputDevOpen;
+		pInputDev->close = pmDriver_InputDevClose;
+	}
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 38)
+	set_bit(INPUT_PROP_DIRECT, pInputDev->propbit);
+#endif
+
+	// Set up "dev" field
+	pInputDev->dev.parent = pParentDev;
+
+	input_set_drvdata(pInputDev, pPenMount);
+
+	// Register input device
+	rc = input_register_device(pInputDev);
+
+	pPenMount->pInputDev = pInputDev;
+
+	if (pPenMount->Model != PMDEVICE_MODEL_5000) {
+		pmDriver_DisableDevice(pPenMount);
+		pmDriver_DisableDevice(pPenMount);
+		pmDriver_LoadCalibData(pPenMount);
+		pmDriver_EnableDevice(pPenMount);
+	}
+
+	return rc;
+}
+//------------------------------------------------------
+void pmDriver_InputDevExit(struct strPENMOUNT *pPenMount) {
+	if (pPenMount == NULL)
+		return;
+
+	input_set_drvdata(pPenMount->pInputDev, NULL);
+	input_unregister_device(pPenMount->pInputDev);
+
+	return;
+}
+////////////////////////////////////////////////////////
+// Event Processing
+////////////////////////////////////////////////////////
+void pmDriver_ProcessEvent(struct input_dev *pInputDev,
+		struct strPENMOUNT *pPenMount) {
+	if (pPenMount->bTouch) {
+		input_report_key(pInputDev, BTN_TOUCH, 1);
+	} else {
+		input_report_key(pInputDev, BTN_TOUCH, 0);
+	}
+
+	input_report_abs(pInputDev, ABS_X, pPenMount->X);
+	input_report_abs(pInputDev, ABS_Y, pPenMount->Y);
+
+	input_sync(pInputDev);
+
+	return;
+}
+////////////////////////////////////////////////////////
+// Module
+////////////////////////////////////////////////////////
+static
+int __init pmModule_Init ( void )
+{
+	int rc = 0;
+	pmDriver_Procfsmkdir();
+
+	rc = serio_register_driver ( &PMDRIVER_SERIO );
+	if (rc)
+		printk ("[PENMOUNT] Failed on registering serio driver !\n");
+
+	rc = usb_register ( &PMDRIVER_USBIF );
+	if (rc)
+		printk ("[PENMOUNT] Failed on registering USB driver !\n");
+
+	return rc;
+}
+//------------------------------------------------------
+static
+void __exit pmModule_Exit ( void )
+{
+	serio_unregister_driver ( &PMDRIVER_SERIO );
+	usb_deregister ( &PMDRIVER_USBIF );
+
+	pmDriver_Procfsrmdir(); // Child nodes need to be removed first
+	return;
+}
+//------------------------------------------------------
+module_init (pmModule_Init);
+module_exit (pmModule_Exit);
+////////////////////////////////////////////////////////
+MODULE_AUTHOR("PenMount Touch Solutions <penmount@seed.net.tw>");
+MODULE_DESCRIPTION(PMMODULE_DESC);
+MODULE_LICENSE("GPL");
+////////////////////////////////////////////////////////
diff --git a/kernel_imx/drivers/input/touchscreen/penmount-serio.c b/kernel_imx/drivers/input/touchscreen/penmount-serio.c
new file mode 100644
index 0000000..fecd72e
--- /dev/null
+++ b/kernel_imx/drivers/input/touchscreen/penmount-serio.c
@@ -0,0 +1,348 @@
+/*******************************************************
+ *
+ * PenMount Serial TouchScreen Driver
+ *
+ * Copyright (c) 2013 PenMount Touch Solutions <penmount@seed.net.tw>
+ *
+ *******************************************************/
+
+/*******************************************************
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the Free
+ * Software Foundation; either version 2 of the License, or (at your option)
+ * any later version.
+ *******************************************************/
+
+////////////////////////////////////////////////////////
+// Include
+////////////////////////////////////////////////////////
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/version.h>
+#include <linux/proc_fs.h>
+#include <linux/serio.h>
+#include <linux/input.h>
+#include "penmount.h"
+////////////////////////////////////////////////////////
+// Define
+////////////////////////////////////////////////////////
+// Manually specify the Target ID during compile time
+#define PMSERIO_TARGETID    0
+#define PMSERIO_DRIVER_DESC "PenMount Serial Touchscreen Driver"
+////////////////////////////////////////////////////////
+// Global Variables
+////////////////////////////////////////////////////////
+unsigned short PMSERIO_PRODUCTID[3] = { PMDEVICE_MODEL_9000, PMDEVICE_MODEL_6000, 0 };
+//------------------------------------------------------
+unsigned short PMSERIO_PACKETSIZE[3] = { 5, 6, 0 };
+//------------------------------------------------------
+unsigned char PENMOUNT_COMMAND_ENABLE[6] =
+		{ 0xF1, 0x00, 0x00, 0x00, 0x00, 0x0E };
+////////////////////////////////////////////////////////
+static
+unsigned char pmSerIo_GetCheckSUM(unsigned char *pBuffer) {
+	return (~((pBuffer[0] + pBuffer[1] + pBuffer[2] + pBuffer[3] + pBuffer[4])
+			& 0xFF));
+}
+//------------------------------------------------------
+int pmSerIo_WriteCMD(struct strPENMOUNT *pPenMount, unsigned char * pCommand) {
+	int i = 0;
+	unsigned char pBufferOUT[PMDRIVER_SIZE_FEATUREREPORT + 1];
+
+	memcpy(pBufferOUT, pCommand, PMDRIVER_SIZE_FEATUREREPORT);
+	pBufferOUT[PMDRIVER_SIZE_FEATUREREPORT] = pmSerIo_GetCheckSUM(pCommand);
+
+	pPenMount->bCmdMode = pCommand[0];
+	pPenMount->bDataRdy = 0;
+	for (i = 0; i < pPenMount->cbPacket; i++)
+		serio_write(pPenMount->SerIo.pDevice, pBufferOUT[i]);
+
+	pmDriver_TimerAddCMD(pPenMount);
+
+	return 1;
+}
+//------------------------------------------------------
+int pmSerIo_WaitACK(struct strPENMOUNT *pPenMount, unsigned char * pResponse) {
+	if (!pmDriver_WaitCMDResponse(pPenMount))
+		return 0;
+
+	memcpy(pResponse, pPenMount->pResponse, PMDRIVER_SIZE_FEATUREREPORT);
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmSerIo_VerifyData(unsigned char *pBuffer) {
+	return (pBuffer[5] == pmSerIo_GetCheckSUM(pBuffer));
+}
+//------------------------------------------------------
+static
+int pmSerIo_CollectData_PM9000(struct strPENMOUNT *pPenMount,
+		unsigned char cData) {
+	unsigned char bDataValid = 0;
+
+	if (pPenMount->bPurgeData)
+		return 0;
+
+	if (pPenMount->DataIndex == 0) {
+		if (pPenMount->bCmdMode) {
+			if (cData == pPenMount->bCmdMode)
+				bDataValid = 1;
+		}
+		else if ((cData == 0xBF) || (cData == 0xFF))
+			bDataValid = 1;
+	} else {
+		if (pPenMount->bCmdMode)
+			bDataValid = 1;
+		else if ((cData == 0xBF) || (cData == 0xFF)) {
+			pPenMount->DataIndex = 0;
+			bDataValid = 1;
+		}
+		else if ((cData & 0x80)==0)
+			bDataValid = 1;
+	}
+
+	if (bDataValid == 1)
+		pPenMount->pInputBuffer[pPenMount->DataIndex++] = cData;
+
+	if (pPenMount->DataIndex < pPenMount->cbPacket)
+		return 0;
+
+	pPenMount->DataIndex = 0;
+
+	if (pPenMount->bCmdMode) {
+		pmDriver_TimerDelCMD(pPenMount);
+		memcpy(pPenMount->pResponse, pPenMount->pInputBuffer,
+				pPenMount->cbPacket);
+		pPenMount->bCmdMode = 0;
+		pPenMount->bDataRdy = 1;
+		return 1;
+	}
+
+	pPenMount->bTouch = (pPenMount->pInputBuffer[0]==0xFF);
+	pPenMount->X = pPenMount->pInputBuffer[2]
+			+ (pPenMount->pInputBuffer[1] << 7);
+	pPenMount->Y = pPenMount->pInputBuffer[4]
+			+ (pPenMount->pInputBuffer[3] << 7);
+	RawX = pPenMount->X;
+	RawY = pPenMount->Y;
+	// printk ("[PENMOUNT] %d (%d,%d)\n", pPenMount->bTouch, pPenMount->X, pPenMount->Y);
+	pmDriver_CalibData(pPenMount, &pPenMount->X, &pPenMount->Y);
+
+	if (pPenMount->pInputDev == NULL)
+		return 0;
+
+	if (pmDriver_CheckInsideAA(pPenMount, pPenMount->X, pPenMount->Y))
+		pmDriver_ProcessEvent(pPenMount->pInputDev, pPenMount);
+
+	return 1;
+}
+//------------------------------------------------------
+static
+int pmSerIo_CollectData_PM6000(struct strPENMOUNT *pPenMount,
+		unsigned char cData) {
+	unsigned char bDataValid = 0;
+
+	if (pPenMount->bCmdMode)
+	{
+		pmDriver_TimerReset (pPenMount);
+	}
+
+	if (pPenMount->bPurgeData)
+		return 0;
+
+	if (pPenMount->DataIndex == 0) {
+		if ((cData == 0x70) || (cData == 0x30))
+			bDataValid = 1;
+		else if ((pPenMount->bCmdMode) && (cData == pPenMount->bCmdMode))
+			bDataValid = 1;
+	} else
+		bDataValid = 1;
+
+	if (bDataValid == 1)
+		pPenMount->pInputBuffer[pPenMount->DataIndex++] = cData;
+
+	if (pPenMount->DataIndex < pPenMount->cbPacket)
+		return 0;
+
+	pPenMount->DataIndex = 0;
+	if (!pmSerIo_VerifyData(pPenMount->pInputBuffer))
+		return 0;
+
+	if (pPenMount->bCmdMode) {
+		pmDriver_TimerDelCMD(pPenMount);
+		memcpy(pPenMount->pResponse, pPenMount->pInputBuffer,
+				pPenMount->cbPacket);
+		pPenMount->bCmdMode = 0;
+		pPenMount->bDataRdy = 1;
+		return 1;
+	}
+
+	pPenMount->bTouch = ((pPenMount->pInputBuffer[0] & 0xF0) == 0x70);
+	pPenMount->X = pPenMount->pInputBuffer[1]
+			+ (pPenMount->pInputBuffer[2] << 8);
+	pPenMount->Y = pPenMount->pInputBuffer[3]
+			+ (pPenMount->pInputBuffer[4] << 8);
+	RawX = pPenMount->X;
+	RawY = pPenMount->Y;
+
+	pmDriver_CalibData(pPenMount, &pPenMount->X, &pPenMount->Y);
+
+	if (pPenMount->pInputDev == NULL)
+		return 0;
+
+	if (pmDriver_CheckInsideAA(pPenMount, pPenMount->X, pPenMount->Y))
+		pmDriver_ProcessEvent(pPenMount->pInputDev, pPenMount);
+
+	return 1;
+}
+//------------------------------------------------------
+static
+irqreturn_t pmSerIo_Interrupt(struct serio *pSerIo, unsigned char cData,
+		unsigned int flags) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) serio_get_drvdata(pSerIo);
+	if (pPenMount == NULL)
+		return IRQ_HANDLED;
+
+	if (pPenMount->SerIo.pfnCollectData)
+		pPenMount->SerIo.pfnCollectData(pPenMount, cData);
+
+	return IRQ_HANDLED;
+}
+//------------------------------------------------------
+static
+void pmSerIo_Disconnect(struct serio *pSerIo) {
+	struct strPENMOUNT *pPenMount = NULL;
+	if (pSerIo == NULL)
+		return;
+
+	pPenMount = (struct strPENMOUNT *) serio_get_drvdata(pSerIo);
+
+	if (pPenMount == NULL)
+		return;
+
+	printk("[PENMOUNT] %s disconnected !\n", pPenMount->szDeviceName);
+
+	pmDriver_ProcfsExit(pPenMount);
+	pmDriver_InputDevExit(pPenMount);
+
+	serio_set_drvdata(pSerIo, NULL);
+
+	serio_close(pSerIo);
+
+	kfree(pPenMount->pInputBuffer);
+	kfree(pPenMount);
+
+	return;
+}
+//------------------------------------------------------
+static
+int pmSerIo_EnableDevice(struct strPENMOUNT *pPenMount) {
+	int rc = 0;
+	int i = 0;
+
+	for (i = 0; i < pPenMount->cbPacket; i++)
+		rc |= serio_write(pPenMount->SerIo.pDevice, PENMOUNT_COMMAND_ENABLE[i]);
+
+	return rc;
+}
+//------------------------------------------------------
+static
+int pmSerIo_Connect(struct serio *pSerIo, struct serio_driver *pDriver) {
+	struct strPENMOUNT *pPenMount = NULL;
+	int rc = 0;
+	struct input_id InputID;
+
+	// [1] Allocate memory
+	pPenMount = pmDriver_InitContext();
+	if (pPenMount == NULL) {
+		printk("[PENMOUNT] Allocate device FAILED !\n");
+		return -ENOMEM;
+	}
+	serio_set_drvdata(pSerIo, pPenMount);
+
+	pPenMount->pInputBuffer = kzalloc(PMDRIVER_SIZE_MAXPACKET, GFP_KERNEL);
+	if (pPenMount->pInputBuffer == NULL) {
+		kfree(pPenMount);
+		return -ENOMEM;
+	}
+
+	pPenMount->SerIo.pDevice = pSerIo;
+
+	// [2] Set up input device
+	pPenMount->Model = PMSERIO_PRODUCTID[pSerIo->id.id];
+	pPenMount->cbPacket = PMSERIO_PACKETSIZE[pSerIo->id.id];
+
+	snprintf(pPenMount->szPhysDevice, sizeof(pPenMount->szPhysDevice),
+			"%s/input0", pSerIo->phys);
+
+	switch (pPenMount->Model) {
+	default:
+	case PMDEVICE_MODEL_6000:
+		pPenMount->SerIo.pfnCollectData = pmSerIo_CollectData_PM6000;
+
+		pmSerIo_EnableDevice(pPenMount);
+
+		snprintf(pPenMount->szDeviceName, sizeof(pPenMount->szDeviceName),
+				"PenMount 6000 Serial TouchScreen");
+		break;
+	case PMDEVICE_MODEL_9000:
+		pPenMount->SerIo.pfnCollectData = pmSerIo_CollectData_PM9000;
+		snprintf(pPenMount->szDeviceName, sizeof(pPenMount->szDeviceName),
+				"PenMount 9000 Serial TouchScreen");
+		break;
+	}
+
+	InputID.bustype = BUS_RS232;
+	InputID.vendor  = SERIO_PENMOUNT;
+	InputID.product = pPenMount->Model;
+	InputID.version = PMDRIVER_VERSION;
+	rc = pmDriver_InputDevInit(pPenMount, &pSerIo->dev, &InputID);
+	if (rc) {
+		printk("[PENMOUNT] input_register_device FAILED !\n");
+		kfree(pPenMount);
+		return rc;
+	}
+
+	// [3] Open serio, start receiving interrupt data.
+	rc = serio_open(pSerIo, pDriver);
+	if (rc) {
+		printk("[PENMOUNT] serio_open FAILED ! (%d)\n", rc);
+		pmDriver_InputDevExit(pPenMount);
+		kfree(pPenMount);
+		return rc;
+	}
+
+	pmDriver_ProcfsInit(pPenMount);
+
+	return 0;
+}
+////////////////////////////////////////////////////////
+static
+struct serio_device_id PMSERIO_DEVICEID[] =
+{
+	{
+		.type = SERIO_RS232 ,
+		.proto = SERIO_PENMOUNT ,
+		.id = SERIO_ANY ,
+		.extra = SERIO_ANY ,
+	},
+	{0}
+};
+//------------------------------------------------------
+struct serio_driver PMDRIVER_SERIO =
+{
+	.driver =
+	{
+		.name = "serio-penmount" ,
+	},
+	.description = PMSERIO_DRIVER_DESC ,
+	.id_table = PMSERIO_DEVICEID ,
+	.interrupt = pmSerIo_Interrupt ,
+	.connect = pmSerIo_Connect ,
+	.disconnect = pmSerIo_Disconnect ,
+};
+//------------------------------------------------------
+MODULE_DEVICE_TABLE(serio, PMSERIO_DEVICEID);
+////////////////////////////////////////////////////////
diff --git a/kernel_imx/drivers/input/touchscreen/penmount-usb.c b/kernel_imx/drivers/input/touchscreen/penmount-usb.c
new file mode 100644
index 0000000..a888653
--- /dev/null
+++ b/kernel_imx/drivers/input/touchscreen/penmount-usb.c
@@ -0,0 +1,309 @@
+/*******************************************************
+ *
+ *  PenMount USB TouchScreen Driver
+ *
+ *  Copyright (c) 2013 PenMount Touch Solutions <penmount@seed.net.tw>
+ *
+ *******************************************************/
+
+/*******************************************************
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the Free
+ * Software Foundation; either version 2 of the License, or (at your option)
+ * any later version.
+ *******************************************************/
+
+////////////////////////////////////////////////////////
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/version.h>
+#include <linux/proc_fs.h>
+#include <linux/usb.h>
+#include <linux/usb/input.h> // define usb_to_input_id()
+#include <linux/input.h>
+#include <linux/hid.h>
+#include "penmount.h"
+////////////////////////////////////////////////////////
+#define PMUSB_DRIVER_DESC "PenMount USB TouchScreen Driver"
+////////////////////////////////////////////////////////
+int pmUsbIF_SetFeatureReport(struct usb_device * pUsbDevice,
+		unsigned char * pBuffer, unsigned long cbData) {
+	int ret = 0;
+	unsigned char *pBufferOUT = NULL;
+
+	pBufferOUT = kmalloc(cbData, GFP_KERNEL | __GFP_ZERO);
+	if (pBufferOUT == NULL)
+		return 0;
+
+	memcpy(pBufferOUT, pBuffer, cbData);
+
+	ret = usb_control_msg(pUsbDevice, usb_sndctrlpipe(pUsbDevice, 0), // pipe
+	HID_REQ_SET_REPORT, // request
+			USB_DIR_OUT | USB_TYPE_CLASS | USB_RECIP_INTERFACE, // requesttype
+			((HID_FEATURE_REPORT + 1) << 8), // value
+			0, // index
+			pBufferOUT, // data
+			cbData, // size
+			USB_CTRL_SET_TIMEOUT);
+
+	kfree(pBufferOUT);
+	if (ret == cbData)
+		return 1;
+
+	printk("[PENMOUNT] Failed to set feature report !! (%d)\n", ret);
+	return 0;
+}
+//------------------------------------------------------
+int pmUsbIF_GetFeatureReport(struct usb_device * pUsbDevice,
+		unsigned char * pBuffer, unsigned long cbData) {
+	int ret;
+	unsigned char *pBufferIN = NULL;
+
+	pBufferIN = kmalloc(cbData, GFP_KERNEL | __GFP_ZERO);
+	if (pBufferIN == NULL)
+		return 0;
+
+	ret = usb_control_msg(pUsbDevice, usb_rcvctrlpipe(pUsbDevice, 0), // pipe
+	HID_REQ_GET_REPORT, // request
+			USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE, // requesttype
+			((HID_FEATURE_REPORT + 1) << 8), // value
+			0, // index
+			pBufferIN, // data
+			cbData, // size
+			USB_CTRL_GET_TIMEOUT);
+
+	if (ret == cbData) {
+		memcpy(pBuffer, pBufferIN, cbData);
+		kfree(pBufferIN);
+		return 1;
+	}
+
+	printk("[PENMOUNT] Failed to get feature report !! (%d)\n", ret);
+	kfree(pBufferIN);
+
+	return 0;
+}
+//------------------------------------------------------
+/* Workqueue routine to reset the device or clear a halt */
+static
+void pmUsbIF_ResetPipe(struct work_struct *work)
+{
+	struct strPENMOUNT *pPenMount = NULL;
+	int rc = 0;
+
+	pPenMount = container_of(work, struct strPENMOUNT, reset_work);
+
+	rc = usb_clear_halt(pPenMount->USB.pDevice, pPenMount->USB.pUrb->pipe);
+
+	switch (rc) {
+	case 0:
+		printk("[PENMOUNT] Clearing endpoint halt/stall OK !\n");
+		break;
+	default:
+		/* FALLTHROUGH */
+	case -EHOSTUNREACH:
+	case -ENODEV:
+	case -EINTR:
+		printk("[PENMOUNT] Clear endpoint halt/stall FAILED : (%d) !\n", rc);
+		break;
+	}
+
+	rc = usb_submit_urb(pPenMount->USB.pUrb, GFP_ATOMIC);
+	printk("[PENMOUNT] Starting next URB (%d)!\n", rc);
+
+	return;
+}
+//------------------------------------------------------
+static
+void pmUsbIF_ReadComplete(struct urb *pUrb) {
+	struct strPENMOUNT *pPenMount = pUrb->context;
+	struct input_dev *pInputDev = pPenMount->pInputDev;
+
+	switch (pUrb->status) {
+	case 0:
+		switch (pPenMount->Model) {
+		default:
+		case PMDEVICE_MODEL_5000:
+		case PMDEVICE_MODEL_6000:
+			pPenMount->bTouch = ((pPenMount->pInputBuffer[0] & 0xF0) == 0x70);
+			pPenMount->X = pPenMount->pInputBuffer[1]
+					+ (pPenMount->pInputBuffer[2] << 8);
+			pPenMount->Y = pPenMount->pInputBuffer[3]
+					+ (pPenMount->pInputBuffer[4] << 8);
+			RawX = pPenMount->X;
+			RawY = pPenMount->Y;
+			pmDriver_CalibData(pPenMount, &pPenMount->X, &pPenMount->Y);
+			if (pmDriver_CheckInsideAA(pPenMount, pPenMount->X, pPenMount->Y))
+				pmDriver_ProcessEvent(pInputDev, pPenMount);
+			break;
+		}
+		usb_submit_urb(pUrb, GFP_ATOMIC);
+		break;
+	default:
+		printk("[PENMOUNT] Failed to get input report : (%d) !\n", pUrb->status);
+		usb_submit_urb(pUrb, GFP_ATOMIC);
+		break;
+	case -EPIPE:
+		printk("[PENMOUNT] Failed to get input report : Broken pipe !\n");
+		schedule_work(&pPenMount->reset_work);
+		break;
+	case -ENOENT: /* -2   */
+		printk("[PENMOUNT] Failed to get input report : No such file or directory !\n");
+		break;
+	case -ETIME: /* -62 URB Time Out */
+		printk("[PENMOUNT] Failed to get input report : Timer expired !\n");
+		usb_submit_urb(pUrb, GFP_ATOMIC);
+		break;
+	case -ECONNRESET: /* -104 */
+		printk("[PENMOUNT] Failed to get input report : Connection reset by peer !\n");
+		break;
+	case -ESHUTDOWN: /* -108 */
+		printk("[PENMOUNT] Failed to get input report : Cannot send after transport endpoint shutdown !\n");
+		break;
+	}
+
+	return;
+}
+//------------------------------------------------------
+static
+int pmUsbIF_Probe(struct usb_interface *pUsbInterface,
+		const struct usb_device_id *pUsbDeviceID) {
+	int rc = 0;
+	struct usb_device *pUsbDevice = NULL;
+	struct usb_endpoint_descriptor *pUsbEndPoint = NULL;
+	struct strPENMOUNT *pPenMount = NULL;
+	struct input_id InputID;
+
+	pPenMount = pmDriver_InitContext();
+	if (pPenMount == NULL)
+		return -ENOMEM;
+
+	// Initialize the USB Device
+	pUsbDevice = interface_to_usbdev(pUsbInterface);
+	pUsbEndPoint = &pUsbInterface->cur_altsetting->endpoint[0].desc;
+
+	pPenMount->USB.pDevice = pUsbDevice;
+
+	usb_make_path(pUsbDevice, pPenMount->szPhysDevice,
+			sizeof(pPenMount->szPhysDevice));
+	strlcat(pPenMount->szPhysDevice, "/input0",
+			sizeof(pPenMount->szPhysDevice));
+
+	pPenMount->USB.pUrb = usb_alloc_urb(0, GFP_KERNEL);
+	if (pPenMount->USB.pUrb == NULL) {
+		kfree(pPenMount);
+		return -ENOMEM;
+	}
+	pPenMount->cbPacket = 5;
+
+	pPenMount->pInputBuffer = (unsigned char *)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 34)
+			usb_alloc_coherent
+#else
+			usb_buffer_alloc
+#endif
+			( pUsbDevice ,
+					pPenMount->cbPacket ,
+					GFP_KERNEL ,
+					&pPenMount->USB.DmaAddress );
+	if (pPenMount->pInputBuffer == NULL) {
+		kfree(pPenMount);
+		return -ENOMEM;
+	}
+
+	usb_fill_int_urb(pPenMount->USB.pUrb, pUsbDevice,
+			usb_rcvintpipe(pUsbDevice, pUsbEndPoint->bEndpointAddress),
+			pPenMount->pInputBuffer, pPenMount->cbPacket, pmUsbIF_ReadComplete,
+			pPenMount, pUsbEndPoint->bInterval);
+
+	pPenMount->USB.pUrb->dev = pUsbDevice;
+	pPenMount->USB.pUrb->transfer_dma = pPenMount->USB.DmaAddress;
+	pPenMount->USB.pUrb->transfer_flags |= URB_NO_TRANSFER_DMA_MAP;
+
+	usb_set_intfdata(pUsbInterface, pPenMount);
+
+	// Initialize the Input Device
+	usb_to_input_id(pUsbDevice, &InputID);
+	pPenMount->Model = InputID.product;
+	switch (pPenMount->Model) {
+	case 0x9998:
+		pPenMount->Model = PMDEVICE_MODEL_5000;
+	case PMDEVICE_MODEL_5000:
+		snprintf(pPenMount->szDeviceName, sizeof(pPenMount->szDeviceName),
+				"PenMount_5000_USB_TouchScreen");
+		break;
+	case PMDEVICE_MODEL_6000:
+		snprintf(pPenMount->szDeviceName, sizeof(pPenMount->szDeviceName),
+				"PenMount_6000_USB_TouchScreen");
+		break;
+	}
+
+	rc = pmDriver_InputDevInit(pPenMount, &pUsbInterface->dev, &InputID);
+	if (rc) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 34)
+		usb_free_coherent
+#else
+		usb_buffer_free
+#endif
+		( pUsbDevice ,
+				pPenMount->cbPacket ,
+				pPenMount->pInputBuffer ,
+				pPenMount->USB.DmaAddress );
+
+		usb_free_urb(pPenMount->USB.pUrb);
+		kfree(pPenMount);
+		return -ENOMEM;
+	}
+
+	pmDriver_ProcfsInit(pPenMount);
+	INIT_WORK(&pPenMount->reset_work, pmUsbIF_ResetPipe);
+	return rc;
+}
+//------------------------------------------------------
+static
+void pmUsbIF_Disconnect(struct usb_interface *pUsbInterface) {
+	struct strPENMOUNT *pPenMount = NULL;
+
+	pPenMount = (struct strPENMOUNT *) usb_get_intfdata(pUsbInterface);
+	if (pPenMount == NULL)
+		return;
+
+	pmDriver_ProcfsExit(pPenMount);
+	pmDriver_InputDevExit(pPenMount);
+
+	if (pPenMount->USB.pUrb)
+		usb_free_urb(pPenMount->USB.pUrb);
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 34)
+	usb_free_coherent
+#else
+	usb_buffer_free
+#endif
+	( interface_to_usbdev(pUsbInterface) ,
+			pPenMount->cbPacket ,
+			pPenMount->pInputBuffer ,
+			pPenMount->USB.DmaAddress );
+
+	usb_set_intfdata(pUsbInterface, NULL);
+
+	kfree(pPenMount);
+
+	return;
+}
+////////////////////////////////////////////////////////
+static struct usb_device_id PMUSBIF_DEVICES[] = {
+		{ USB_DEVICE(0x1204, 0x9998) },
+		{ USB_DEVICE(PMDEVICE_VENDORID_USB, PMDEVICE_MODEL_5000) },
+		{ USB_DEVICE(PMDEVICE_VENDORID_USB, PMDEVICE_MODEL_6000) },
+		{ }
+};
+//------------------------------------------------------
+struct usb_driver PMDRIVER_USBIF =
+{
+	.name = "usb-penmount" ,
+	.probe = pmUsbIF_Probe ,
+	.disconnect = pmUsbIF_Disconnect ,
+	.id_table = PMUSBIF_DEVICES ,
+};
+//------------------------------------------------------
+MODULE_DEVICE_TABLE(usb, PMUSBIF_DEVICES);
diff --git a/kernel_imx/drivers/input/touchscreen/penmount.h b/kernel_imx/drivers/input/touchscreen/penmount.h
new file mode 100644
index 0000000..79d9241
--- /dev/null
+++ b/kernel_imx/drivers/input/touchscreen/penmount.h
@@ -0,0 +1,143 @@
+////////////////////////////////////////////////////////
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/version.h>
+#include <linux/proc_fs.h>
+#include <linux/serio.h>
+#include <linux/usb.h>
+#include <linux/input.h>
+////////////////////////////////////////////////////////
+#ifndef PMDEVICE_VENDORID_USB
+#define PMDEVICE_VENDORID_USB   0x14E1
+#endif
+//------------------------------------------------------
+#ifndef SERIO_PENMOUNT
+#define SERIO_PENMOUNT  0x31
+#endif
+//------------------------------------------------------
+#ifndef PMDEVICE_MODEL_5000
+#define PMDEVICE_MODEL_5000     0x5000
+#endif
+//------------------------------------------------------
+#ifndef PMDEVICE_MODEL_6000
+#define PMDEVICE_MODEL_6000     0x6000
+#endif
+//------------------------------------------------------
+#ifndef PMDEVICE_MODEL_9000
+#define PMDEVICE_MODEL_9000     0x9000
+#endif
+//------------------------------------------------------
+#ifdef  USB_CTRL_SET_TIMEOUT
+#undef  USB_CTRL_SET_TIMEOUT
+#endif
+#define USB_CTRL_SET_TIMEOUT    5000
+//------------------------------------------------------
+#ifdef  USB_CTRL_GET_TIMEOUT
+#undef  USB_CTRL_GET_TIMEOUT
+#endif
+#define USB_CTRL_GET_TIMEOUT    5000
+//------------------------------------------------------
+#define PMDRIVER_SIZE_MAXPACKET      6
+#define PMDRIVER_SIZE_FEATUREREPORT  5
+#define PENMOUNT_CALIBMODE_TSLIB     5
+#define PMDRIVER_TIMEOUT_GETRESPONSE (HZ/5)
+#define PMDRIVER_TIMEOUT_PURGEDATA   (HZ/10)
+//------------------------------------------------------
+#define PMDRIVER_MAJORVER 1
+#define PMDRIVER_MINORVER 8
+#define PMDRIVER_BUILDVER 7
+#define PMDRIVER_VERSION  ((PMDRIVER_MAJORVER<<8)|(PMDRIVER_MINORVER<<4)|PMDRIVER_BUILDVER)
+////////////////////////////////////////////////////////
+// Structure
+////////////////////////////////////////////////////////
+struct strPENMOUNT;
+//------------------------------------------------------
+struct strPMTOUCH {
+	unsigned char bUpdated;
+	__s32 TrackID;
+	unsigned char Slot;
+	unsigned short LastX;
+	unsigned short LastY;
+	unsigned char LastState;
+};
+//------------------------------------------------------
+struct strPMUSB {
+	struct urb * pUrb;
+	struct usb_device * pDevice;
+	dma_addr_t DmaAddress;
+};
+//------------------------------------------------------
+struct strPMSERIO {
+	struct serio * pDevice;
+	int (*pfnCollectData)(struct strPENMOUNT *, unsigned char);
+};
+//------------------------------------------------------
+struct strPMCALIB {
+	int bEnable;
+	int mode;
+	int param[7];
+	struct proc_dir_entry * pProcfsReload;
+	struct proc_dir_entry * pProcfsEnable;
+};
+//------------------------------------------------------
+struct strPENMOUNT {
+	char szPhysDevice[128];
+	char szDeviceName[64];
+	unsigned short Model;
+	unsigned char cbPacket;
+	unsigned char *pInputBuffer;
+	unsigned char pResponse[6];
+	unsigned char OpenCount;
+	unsigned char bCmdMode;
+	unsigned char bPurgeData;
+	unsigned char DataIndex;
+	unsigned char bDataRdy;
+
+	unsigned char bTouch;
+	unsigned char bTouching;
+	unsigned short X;
+	unsigned short Y;
+
+	struct input_dev * pInputDev;
+	struct proc_dir_entry * pProcfs;
+	struct timer_list Timer;
+	struct strPMUSB USB;
+	struct strPMSERIO SerIo;
+	struct strPMCALIB Calib;
+	struct work_struct reset_work;                                  /* Task context for resets */
+};
+////////////////////////////////////////////////////////
+// Extern Variables
+////////////////////////////////////////////////////////
+extern struct usb_driver PMDRIVER_USBIF;
+extern struct serio_driver PMDRIVER_SERIO;
+extern struct proc_dir_entry * PMDRIVER_PROCFS_DIRENTRY;
+extern int RawX;
+extern int RawY;
+////////////////////////////////////////////////////////
+// Function prototype
+////////////////////////////////////////////////////////
+struct strPENMOUNT * pmDriver_InitContext(void);
+int pmDriver_InputDevInit(struct strPENMOUNT *, struct device *,
+		struct input_id *);
+void pmDriver_InputDevExit(struct strPENMOUNT *);
+int pmDriver_InputDevOpen(struct input_dev *);
+void pmDriver_InputDevClose(struct input_dev *);
+void pmDriver_ProcessEvent(struct input_dev *, struct strPENMOUNT *);
+int pmDriver_ProcfsInit(struct strPENMOUNT *);
+void pmDriver_ProcfsExit(struct strPENMOUNT *);
+int pmUsbIF_GetFeatureReport(struct usb_device *, unsigned char *,
+		unsigned long);
+int pmUsbIF_SetFeatureReport(struct usb_device *, unsigned char *,
+		unsigned long);
+int pmSerIo_WriteCMD(struct strPENMOUNT *, unsigned char *);
+int pmSerIo_WaitACK(struct strPENMOUNT *, unsigned char *);
+void pmDriver_CalibData(struct strPENMOUNT *, unsigned short *,
+		unsigned short *);
+int pmDriver_CheckInsideAA (struct strPENMOUNT *, unsigned short, unsigned short);
+int pmDriver_TimerAddCMD(struct strPENMOUNT *);
+int pmDriver_TimerDelCMD(struct strPENMOUNT *);
+int pmDriver_TimerReset(struct strPENMOUNT *);
+int pmDriver_WaitCMDResponse(struct strPENMOUNT *);
+int pmDriver_CtrlDev_Setup(struct strPENMOUNT *);
+int pmDriver_CtrlDev_Cleaup(struct strPENMOUNT *);
diff --git a/kernel_imx/drivers/net/fec.c b/kernel_imx/drivers/net/fec.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/power/Kconfig b/kernel_imx/drivers/power/Kconfig
old mode 100755
new mode 100644
index 559d48b..751dc47
--- a/kernel_imx/drivers/power/Kconfig
+++ b/kernel_imx/drivers/power/Kconfig
@@ -122,6 +122,13 @@ config BATTERY_BQ20Z75
          Say Y to include support for TI BQ20z75 SBS-compliant
          gas gauge and protection IC.
 
+config BATTERY_BQ20Z75_ANDROID
+		tristate "TI BQ20z75 gas gauge for Android"
+		depends on I2C
+		help
+		 Say Y to include support for TI BQ20z75 SBS-compliant-android
+		 gas gauge and protection IC.
+
 config BATTERY_BQ27x00
 	tristate "BQ27x00 battery driver"
 	help
diff --git a/kernel_imx/drivers/power/Makefile b/kernel_imx/drivers/power/Makefile
old mode 100755
new mode 100644
index 845eb4f..6558e18
--- a/kernel_imx/drivers/power/Makefile
+++ b/kernel_imx/drivers/power/Makefile
@@ -39,3 +39,4 @@ obj-$(CONFIG_CHARGER_GPIO)	+= gpio-charger.o
 obj-$(CONFIG_BATTERY_DA9052)	+= da9052-battery.o
 obj-$(CONFIG_BATTERY_MAX17085)	+= max17085_battery.o
 obj-$(CONFIG_SABRESD_MAX8903)   += sabresd_battery.o
+obj-$(CONFIG_BATTERY_BQ20Z75_ANDROID) += bq20z75-android.o
diff --git a/kernel_imx/drivers/power/bq20z75-android.c b/kernel_imx/drivers/power/bq20z75-android.c
new file mode 100644
index 0000000..14840e4
--- /dev/null
+++ b/kernel_imx/drivers/power/bq20z75-android.c
@@ -0,0 +1,726 @@
+/*
+ * Gas Gauge driver for TI's BQ20Z75
+ *
+ * Copyright (c) 2010, NVIDIA Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/err.h>
+#include <linux/power_supply.h>
+#include <linux/i2c.h>
+#include <linux/slab.h>
+#include <linux/interrupt.h>
+#include <linux/gpio.h>
+
+#include <linux/power/bq20z75.h>
+
+enum {
+	REG_MANUFACTURER_DATA,
+	REG_TEMPERATURE,
+	REG_VOLTAGE,
+	REG_CURRENT,
+	REG_CAPACITY,
+	REG_TIME_TO_EMPTY,
+	REG_TIME_TO_FULL,
+	REG_STATUS,
+	REG_CYCLE_COUNT,
+	REG_SERIAL_NUMBER,
+	REG_REMAINING_CAPACITY,
+	REG_REMAINING_CAPACITY_CHARGE,
+	REG_FULL_CHARGE_CAPACITY,
+	REG_FULL_CHARGE_CAPACITY_CHARGE,
+	REG_DESIGN_CAPACITY,
+	REG_DESIGN_CAPACITY_CHARGE,
+	REG_DESIGN_VOLTAGE,
+};
+
+/* Battery Mode defines */
+#define	BATTERY_UPDATE_INTERVAL 5 /*seconds*/
+#define BATTERY_MODE_OFFSET		0x03
+#define BATTERY_MODE_MASK		0x8000
+enum bq20z75_battery_mode {
+	BATTERY_MODE_AMPS,
+	BATTERY_MODE_WATTS
+};
+
+/* manufacturer access defines */
+#define MANUFACTURER_ACCESS_STATUS	0x0006
+#define MANUFACTURER_ACCESS_SLEEP	0x0011
+
+/* battery status value bits */
+#define BATTERY_DISCHARGING		0x40
+#define BATTERY_FULL_CHARGED		0x20
+#define BATTERY_FULL_DISCHARGED		0x10
+
+#define BQ20Z75_DATA(_psp, _addr, _min_value, _max_value) { \
+	.psp = _psp, \
+	.addr = _addr, \
+	.min_value = _min_value, \
+	.max_value = _max_value, \
+}
+
+static const struct bq20z75_device_data {
+	enum power_supply_property psp;
+	u8 addr;
+	int min_value;
+	int max_value;
+} bq20z75_data[] = {
+	[REG_MANUFACTURER_DATA] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_PRESENT, 0x00, 0, 65535),
+	[REG_TEMPERATURE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_TEMP, 0x08, 0, 65535),
+	[REG_VOLTAGE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_VOLTAGE_NOW, 0x09, 0, 20000),
+	[REG_CURRENT] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CURRENT_NOW, 0x0A, -32768,
+			32767),
+	[REG_CAPACITY] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CAPACITY, 0x0D, 0, 100),
+	[REG_REMAINING_CAPACITY] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_ENERGY_NOW, 0x0F, 0, 65535),
+	[REG_REMAINING_CAPACITY_CHARGE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CHARGE_NOW, 0x0F, 0, 65535),
+	[REG_FULL_CHARGE_CAPACITY] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_ENERGY_FULL, 0x10, 0, 65535),
+	[REG_FULL_CHARGE_CAPACITY_CHARGE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CHARGE_FULL, 0x10, 0, 65535),
+	[REG_TIME_TO_EMPTY] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG, 0x12, 0,
+			65535),
+	[REG_TIME_TO_FULL] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_TIME_TO_FULL_AVG, 0x13, 0,
+			65535),
+	[REG_STATUS] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_STATUS, 0x16, 0, 65535),
+	[REG_CYCLE_COUNT] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CYCLE_COUNT, 0x17, 0, 65535),
+	[REG_DESIGN_CAPACITY] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN, 0x18, 0,
+			65535),
+	[REG_DESIGN_CAPACITY_CHARGE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN, 0x18, 0,
+			65535),
+	[REG_DESIGN_VOLTAGE] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN, 0x19, 0,
+			65535),
+	[REG_SERIAL_NUMBER] =
+		BQ20Z75_DATA(POWER_SUPPLY_PROP_SERIAL_NUMBER, 0x1C, 0, 65535),
+};
+
+static enum power_supply_property bq20z75_properties[] = {
+	POWER_SUPPLY_PROP_STATUS,
+	POWER_SUPPLY_PROP_HEALTH,
+	POWER_SUPPLY_PROP_PRESENT,
+	POWER_SUPPLY_PROP_TECHNOLOGY,
+	POWER_SUPPLY_PROP_CYCLE_COUNT,
+	POWER_SUPPLY_PROP_VOLTAGE_NOW,
+	POWER_SUPPLY_PROP_CURRENT_NOW,
+	POWER_SUPPLY_PROP_CAPACITY,
+	POWER_SUPPLY_PROP_TEMP,
+	POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG,
+	POWER_SUPPLY_PROP_TIME_TO_FULL_AVG,
+	POWER_SUPPLY_PROP_SERIAL_NUMBER,
+	POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN,
+	POWER_SUPPLY_PROP_ENERGY_NOW,
+	POWER_SUPPLY_PROP_ENERGY_FULL,
+	POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN,
+	POWER_SUPPLY_PROP_CHARGE_NOW,
+	POWER_SUPPLY_PROP_CHARGE_FULL,
+	POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN,
+};
+
+struct bq20z75_info {
+	struct i2c_client		*client;
+	struct power_supply		power_supply;
+	struct bq20z75_platform_data	*pdata;
+	struct delayed_work		work;
+	bool				is_present;
+	bool				gpio_detect;
+	bool				enable_detection;
+	int				irq;
+	int				interval;
+};
+
+static void bq20z75_battery_work(struct work_struct *work)
+{
+	struct bq20z75_info *data;
+	data = container_of(work, struct bq20z75_info, work.work);
+
+	data->interval = HZ * BATTERY_UPDATE_INTERVAL;
+	power_supply_changed(&data->power_supply);
+	schedule_delayed_work(&data->work, data->interval);
+}
+
+static int bq20z75_read_word_data(struct i2c_client *client, u8 address)
+{
+	struct bq20z75_info *bq20z75_device = i2c_get_clientdata(client);
+	s32 ret = 0;
+	int retries = 1;
+
+	if (bq20z75_device->pdata)
+		retries = max(bq20z75_device->pdata->i2c_retry_count + 1, 1);
+
+	while (retries > 0) {
+		ret = i2c_smbus_read_word_data(client, address);
+		if (ret >= 0)
+			break;
+		retries--;
+	}
+
+	if (ret < 0) {
+		dev_dbg(&client->dev,
+			"%s: i2c read at address 0x%x failed\n",
+			__func__, address);
+		return ret;
+	}
+
+	return le16_to_cpu(ret);
+}
+
+static int bq20z75_write_word_data(struct i2c_client *client, u8 address,
+	u16 value)
+{
+	struct bq20z75_info *bq20z75_device = i2c_get_clientdata(client);
+	s32 ret = 0;
+	int retries = 1;
+
+	if (bq20z75_device->pdata)
+		retries = max(bq20z75_device->pdata->i2c_retry_count + 1, 1);
+
+	while (retries > 0) {
+		ret = i2c_smbus_write_word_data(client, address,
+			le16_to_cpu(value));
+		if (ret >= 0)
+			break;
+		retries--;
+	}
+
+	if (ret < 0) {
+		dev_dbg(&client->dev,
+			"%s: i2c write to address 0x%x failed\n",
+			__func__, address);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int bq20z75_get_battery_presence_and_health(
+	struct i2c_client *client, enum power_supply_property psp,
+	union power_supply_propval *val)
+{
+	s32 ret;
+	struct bq20z75_info *bq20z75_device = i2c_get_clientdata(client);
+
+	if (psp == POWER_SUPPLY_PROP_PRESENT &&
+		bq20z75_device->gpio_detect) {
+		ret = gpio_get_value(
+			bq20z75_device->pdata->battery_detect);
+		if (ret == bq20z75_device->pdata->battery_detect_present)
+			val->intval = 1;
+		else
+			val->intval = 0;
+		bq20z75_device->is_present = val->intval;
+		return ret;
+	}
+
+	/* Write to ManufacturerAccess with
+	 * ManufacturerAccess command and then
+	 * read the status */
+	ret = bq20z75_write_word_data(client,
+		bq20z75_data[REG_MANUFACTURER_DATA].addr,
+		MANUFACTURER_ACCESS_STATUS);
+	if (ret < 0) {
+		if (psp == POWER_SUPPLY_PROP_PRESENT)
+			val->intval = 0; /* battery removed */
+		return ret;
+	}
+
+	ret = bq20z75_read_word_data(client,
+		bq20z75_data[REG_MANUFACTURER_DATA].addr);
+	if (ret < 0)
+		return ret;
+
+	if (ret < bq20z75_data[REG_MANUFACTURER_DATA].min_value ||
+	    ret > bq20z75_data[REG_MANUFACTURER_DATA].max_value) {
+		val->intval = 0;
+		return 0;
+	}
+
+	/* Mask the upper nibble of 2nd byte and
+	 * lower byte of response then
+	 * shift the result by 8 to get status*/
+	ret &= 0x0F00;
+	ret >>= 8;
+	if (psp == POWER_SUPPLY_PROP_PRESENT) {
+		if (ret == 0x0F)
+			/* battery removed */
+			val->intval = 0;
+		else
+			val->intval = 1;
+	} else if (psp == POWER_SUPPLY_PROP_HEALTH) {
+		if (ret == 0x09)
+			val->intval = POWER_SUPPLY_HEALTH_UNSPEC_FAILURE;
+		else if (ret == 0x0B)
+			val->intval = POWER_SUPPLY_HEALTH_OVERHEAT;
+		else if (ret == 0x0C)
+			val->intval = POWER_SUPPLY_HEALTH_DEAD;
+		else
+			val->intval = POWER_SUPPLY_HEALTH_GOOD;
+	}
+
+	return 0;
+}
+
+static int bq20z75_get_battery_property(struct i2c_client *client,
+	int reg_offset, enum power_supply_property psp,
+	union power_supply_propval *val)
+{
+	s32 ret;
+
+	ret = bq20z75_read_word_data(client,
+		bq20z75_data[reg_offset].addr);
+	if (ret < 0)
+		return ret;
+
+	/* returned values are 16 bit */
+	if (bq20z75_data[reg_offset].min_value < 0)
+		ret = (s16)ret;
+
+	if (ret >= bq20z75_data[reg_offset].min_value &&
+	    ret <= bq20z75_data[reg_offset].max_value) {
+		val->intval = ret;
+		if (psp == POWER_SUPPLY_PROP_STATUS) {
+			if (ret & BATTERY_FULL_CHARGED)
+				val->intval = POWER_SUPPLY_STATUS_FULL;
+			else if (ret & BATTERY_FULL_DISCHARGED)
+				val->intval = POWER_SUPPLY_STATUS_NOT_CHARGING;
+			else if (ret & BATTERY_DISCHARGING)
+				val->intval = POWER_SUPPLY_STATUS_DISCHARGING;
+			else
+				val->intval = POWER_SUPPLY_STATUS_CHARGING;
+		}
+	} else {
+		if (psp == POWER_SUPPLY_PROP_STATUS)
+			val->intval = POWER_SUPPLY_STATUS_UNKNOWN;
+		else
+			val->intval = 0;
+	}
+
+	return 0;
+}
+
+static void  bq20z75_unit_adjustment(struct i2c_client *client,
+	enum power_supply_property psp, union power_supply_propval *val)
+{
+#define BASE_UNIT_CONVERSION		1000
+#define BATTERY_MODE_CAP_MULT_WATT	(10 * BASE_UNIT_CONVERSION)
+#define TIME_UNIT_CONVERSION		60
+#define TEMP_KELVIN_TO_CELSIUS		2731
+	switch (psp) {
+	case POWER_SUPPLY_PROP_ENERGY_NOW:
+	case POWER_SUPPLY_PROP_ENERGY_FULL:
+	case POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN:
+		/* bq20z75 provides energy in units of 10mWh.
+		 * Convert to µWh
+		 */
+		val->intval *= BATTERY_MODE_CAP_MULT_WATT;
+		break;
+
+	case POWER_SUPPLY_PROP_VOLTAGE_NOW:
+	case POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN:
+	case POWER_SUPPLY_PROP_CURRENT_NOW:
+	case POWER_SUPPLY_PROP_CHARGE_NOW:
+	case POWER_SUPPLY_PROP_CHARGE_FULL:
+	case POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN:
+		val->intval *= BASE_UNIT_CONVERSION;
+		break;
+
+	case POWER_SUPPLY_PROP_TEMP:
+		/* bq20z75 provides battery temperature in 0.1K
+		 * so convert it to 0.1°C
+		 */
+		val->intval -= TEMP_KELVIN_TO_CELSIUS;
+		break;
+
+	case POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG:
+	case POWER_SUPPLY_PROP_TIME_TO_FULL_AVG:
+		/* bq20z75 provides time to empty and time to full in minutes.
+		 * Convert to seconds
+		 */
+		val->intval *= TIME_UNIT_CONVERSION;
+		break;
+
+	default:
+		dev_dbg(&client->dev,
+			"%s: no need for unit conversion %d\n", __func__, psp);
+	}
+}
+
+static enum bq20z75_battery_mode
+bq20z75_set_battery_mode(struct i2c_client *client,
+	enum bq20z75_battery_mode mode)
+{
+	int ret, original_val;
+
+	original_val = bq20z75_read_word_data(client, BATTERY_MODE_OFFSET);
+	if (original_val < 0)
+		return original_val;
+
+	if ((original_val & BATTERY_MODE_MASK) == mode)
+		return mode;
+
+	if (mode == BATTERY_MODE_AMPS)
+		ret = original_val & ~BATTERY_MODE_MASK;
+	else
+		ret = original_val | BATTERY_MODE_MASK;
+
+	ret = bq20z75_write_word_data(client, BATTERY_MODE_OFFSET, ret);
+	if (ret < 0)
+		return ret;
+
+	return original_val & BATTERY_MODE_MASK;
+}
+
+static int bq20z75_get_battery_capacity(struct i2c_client *client,
+	int reg_offset, enum power_supply_property psp,
+	union power_supply_propval *val)
+{
+	s32 ret;
+	enum bq20z75_battery_mode mode = BATTERY_MODE_WATTS;
+
+	if (power_supply_is_amp_property(psp))
+		mode = BATTERY_MODE_AMPS;
+
+	mode = bq20z75_set_battery_mode(client, mode);
+	if (mode < 0)
+		return mode;
+
+	ret = bq20z75_read_word_data(client, bq20z75_data[reg_offset].addr);
+	if (ret < 0)
+		return ret;
+
+	if (psp == POWER_SUPPLY_PROP_CAPACITY) {
+		/* bq20z75 spec says that this can be >100 %
+		* even if max value is 100 % */
+		val->intval = min(ret, 100);
+	} else
+		val->intval = ret;
+
+	ret = bq20z75_set_battery_mode(client, mode);
+	if (ret < 0)
+		return ret;
+
+	return 0;
+}
+
+static char bq20z75_serial[5];
+static int bq20z75_get_battery_serial_number(struct i2c_client *client,
+	union power_supply_propval *val)
+{
+	int ret;
+
+	ret = bq20z75_read_word_data(client,
+		bq20z75_data[REG_SERIAL_NUMBER].addr);
+	if (ret < 0)
+		return ret;
+
+	ret = sprintf(bq20z75_serial, "%04x", ret);
+	val->strval = bq20z75_serial;
+
+	return 0;
+}
+
+static int bq20z75_get_property_index(struct i2c_client *client,
+	enum power_supply_property psp)
+{
+	int count;
+	for (count = 0; count < ARRAY_SIZE(bq20z75_data); count++)
+		if (psp == bq20z75_data[count].psp)
+			return count;
+
+	dev_warn(&client->dev,
+		"%s: Invalid Property - %d\n", __func__, psp);
+
+	return -EINVAL;
+}
+
+static int bq20z75_get_property(struct power_supply *psy,
+	enum power_supply_property psp,
+	union power_supply_propval *val)
+{
+	int ret = 0;
+	struct bq20z75_info *bq20z75_device = container_of(psy,
+				struct bq20z75_info, power_supply);
+	struct i2c_client *client = bq20z75_device->client;
+
+	switch (psp) {
+	case POWER_SUPPLY_PROP_PRESENT:
+	case POWER_SUPPLY_PROP_HEALTH:
+		ret = bq20z75_get_battery_presence_and_health(client, psp, val);
+		if (psp == POWER_SUPPLY_PROP_PRESENT)
+			return 0;
+		break;
+
+	case POWER_SUPPLY_PROP_TECHNOLOGY:
+		val->intval = POWER_SUPPLY_TECHNOLOGY_LION;
+		break;
+
+	case POWER_SUPPLY_PROP_ENERGY_NOW:
+	case POWER_SUPPLY_PROP_ENERGY_FULL:
+	case POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN:
+	case POWER_SUPPLY_PROP_CHARGE_NOW:
+	case POWER_SUPPLY_PROP_CHARGE_FULL:
+	case POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN:
+	case POWER_SUPPLY_PROP_CAPACITY:
+		ret = bq20z75_get_property_index(client, psp);
+		if (ret < 0)
+			break;
+
+		ret = bq20z75_get_battery_capacity(client, ret, psp, val);
+		break;
+
+	case POWER_SUPPLY_PROP_SERIAL_NUMBER:
+		ret = bq20z75_get_battery_serial_number(client, val);
+		break;
+
+	case POWER_SUPPLY_PROP_STATUS:
+	case POWER_SUPPLY_PROP_CYCLE_COUNT:
+	case POWER_SUPPLY_PROP_VOLTAGE_NOW:
+	case POWER_SUPPLY_PROP_CURRENT_NOW:
+	case POWER_SUPPLY_PROP_TEMP:
+	case POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG:
+	case POWER_SUPPLY_PROP_TIME_TO_FULL_AVG:
+	case POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN:
+		ret = bq20z75_get_property_index(client, psp);
+		if (ret < 0)
+			break;
+
+		ret = bq20z75_get_battery_property(client, ret, psp, val);
+		break;
+
+	default:
+		dev_err(&client->dev,
+			"%s: INVALID property\n", __func__);
+		return -EINVAL;
+	}
+
+	if (!bq20z75_device->enable_detection)
+		goto done;
+
+	if (!bq20z75_device->gpio_detect &&
+		bq20z75_device->is_present != (ret >= 0)) {
+		bq20z75_device->is_present = (ret >= 0);
+		power_supply_changed(&bq20z75_device->power_supply);
+	}
+
+done:
+	if (!ret) {
+		/* Convert units to match requirements for power supply class */
+		bq20z75_unit_adjustment(client, psp, val);
+	}
+
+	dev_dbg(&client->dev,
+		"%s: property = %d, value = %x\n", __func__, psp, val->intval);
+
+	if (ret && bq20z75_device->is_present)
+		return ret;
+
+	/* battery not present, so return NODATA for properties */
+	if (ret)
+		return -ENODATA;
+
+	return 0;
+}
+
+static irqreturn_t bq20z75_irq(int irq, void *devid)
+{
+	struct power_supply *battery = devid;
+
+	power_supply_changed(battery);
+
+	return IRQ_HANDLED;
+}
+
+static int __devinit bq20z75_probe(struct i2c_client *client,
+	const struct i2c_device_id *id)
+{
+	struct bq20z75_info *bq20z75_device;
+	struct bq20z75_platform_data *pdata = client->dev.platform_data;
+	int rc;
+	int irq;
+
+	bq20z75_device = kzalloc(sizeof(struct bq20z75_info), GFP_KERNEL);
+	if (!bq20z75_device)
+		return -ENOMEM;
+
+	bq20z75_device->client = client;
+	bq20z75_device->enable_detection = false;
+	bq20z75_device->gpio_detect = false;
+	bq20z75_device->power_supply.name = "battery";
+	bq20z75_device->power_supply.type = POWER_SUPPLY_TYPE_BATTERY;
+	bq20z75_device->power_supply.properties = bq20z75_properties;
+	bq20z75_device->power_supply.num_properties =
+		ARRAY_SIZE(bq20z75_properties);
+	bq20z75_device->power_supply.get_property = bq20z75_get_property;
+
+	if (pdata) {
+		bq20z75_device->gpio_detect =
+			gpio_is_valid(pdata->battery_detect);
+		bq20z75_device->pdata = pdata;
+	}
+
+	i2c_set_clientdata(client, bq20z75_device);
+
+	if (!bq20z75_device->gpio_detect)
+		goto skip_gpio;
+
+	rc = gpio_request(pdata->battery_detect, dev_name(&client->dev));
+	if (rc) {
+		dev_warn(&client->dev, "Failed to request gpio: %d\n", rc);
+		bq20z75_device->gpio_detect = false;
+		goto skip_gpio;
+	}
+
+	rc = gpio_direction_input(pdata->battery_detect);
+	if (rc) {
+		dev_warn(&client->dev, "Failed to get gpio as input: %d\n", rc);
+		gpio_free(pdata->battery_detect);
+		bq20z75_device->gpio_detect = false;
+		goto skip_gpio;
+	}
+
+	irq = gpio_to_irq(pdata->battery_detect);
+	if (irq <= 0) {
+		dev_warn(&client->dev, "Failed to get gpio as irq: %d\n", irq);
+		gpio_free(pdata->battery_detect);
+		bq20z75_device->gpio_detect = false;
+		goto skip_gpio;
+	}
+
+	rc = request_irq(irq, bq20z75_irq,
+		IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+		dev_name(&client->dev), &bq20z75_device->power_supply);
+	if (rc) {
+		dev_warn(&client->dev, "Failed to request irq: %d\n", rc);
+		gpio_free(pdata->battery_detect);
+		bq20z75_device->gpio_detect = false;
+		goto skip_gpio;
+	}
+
+	bq20z75_device->irq = irq;
+
+skip_gpio:
+
+	bq20z75_device->interval = HZ * BATTERY_UPDATE_INTERVAL;
+	INIT_DELAYED_WORK(&bq20z75_device->work, bq20z75_battery_work);
+	schedule_delayed_work(&bq20z75_device->work, bq20z75_device->interval);
+
+	rc = power_supply_register(&client->dev, &bq20z75_device->power_supply);
+	if (rc) {
+		dev_err(&client->dev,
+			"%s: Failed to register power supply\n", __func__);
+		goto exit_psupply;
+	}
+
+	dev_info(&client->dev,
+		"%s: battery gas gauge device registered\n", client->name);
+
+	return 0;
+
+exit_psupply:
+	if (bq20z75_device->irq)
+		free_irq(bq20z75_device->irq, &bq20z75_device->power_supply);
+	if (bq20z75_device->gpio_detect)
+		gpio_free(pdata->battery_detect);
+
+	kfree(bq20z75_device);
+
+	return rc;
+}
+
+static int __devexit bq20z75_remove(struct i2c_client *client)
+{
+	struct bq20z75_info *bq20z75_device = i2c_get_clientdata(client);
+
+	if (bq20z75_device->irq)
+		free_irq(bq20z75_device->irq, &bq20z75_device->power_supply);
+	if (bq20z75_device->gpio_detect)
+		gpio_free(bq20z75_device->pdata->battery_detect);
+
+	power_supply_unregister(&bq20z75_device->power_supply);
+	kfree(bq20z75_device);
+	bq20z75_device = NULL;
+
+	return 0;
+}
+
+#if defined CONFIG_PM
+static int bq20z75_suspend(struct i2c_client *client,
+	pm_message_t state)
+{
+	struct bq20z75_info *bq20z75_device = i2c_get_clientdata(client);
+	s32 ret;
+
+	/* write to manufacturer access with sleep command */
+	ret = bq20z75_write_word_data(client,
+		bq20z75_data[REG_MANUFACTURER_DATA].addr,
+		MANUFACTURER_ACCESS_SLEEP);
+	if (bq20z75_device->is_present && ret < 0)
+		return ret;
+
+	return 0;
+}
+#else
+#define bq20z75_suspend		NULL
+#endif
+/* any smbus transaction will wake up bq20z75 */
+#define bq20z75_resume		NULL
+
+static const struct i2c_device_id bq20z75_id[] = {
+	{ "bq20z75", 0 },
+	{}
+};
+MODULE_DEVICE_TABLE(i2c, bq20z75_id);
+
+static struct i2c_driver bq20z75_battery_driver = {
+	.probe		= bq20z75_probe,
+	.remove		= __devexit_p(bq20z75_remove),
+	.suspend	= bq20z75_suspend,
+	.resume		= bq20z75_resume,
+	.id_table	= bq20z75_id,
+	.driver = {
+		.name	= "bq20z75-battery",
+	},
+};
+
+static int __init bq20z75_battery_init(void)
+{
+	return i2c_add_driver(&bq20z75_battery_driver);
+}
+module_init(bq20z75_battery_init);
+
+static void __exit bq20z75_battery_exit(void)
+{
+	i2c_del_driver(&bq20z75_battery_driver);
+}
+module_exit(bq20z75_battery_exit);
+
+MODULE_DESCRIPTION("BQ20z75 battery monitor driver");
+MODULE_LICENSE("GPL");
diff --git a/kernel_imx/drivers/power/max8903_battery.c b/kernel_imx/drivers/power/max8903_battery.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/power/sabresd_battery.c b/kernel_imx/drivers/power/sabresd_battery.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/rtc/Kconfig b/kernel_imx/drivers/rtc/Kconfig
old mode 100755
new mode 100644
index 5730603..6ecd89b
--- a/kernel_imx/drivers/rtc/Kconfig
+++ b/kernel_imx/drivers/rtc/Kconfig
@@ -379,6 +379,12 @@ config RTC_DRV_RX8025
 	  This driver can also be built as a module. If so, the module
 	  will be called rtc-rx8025.
 
+config RTC_DRV_RX8010
+	tristate "Epson RX-8010SJ"
+	help
+	 If you say yes here you get support for the Epson
+	 RX-8010SJ RTC chip.
+
 config RTC_DRV_EM3027
 	tristate "EM Microelectronic EM3027"
 	help
diff --git a/kernel_imx/drivers/rtc/Makefile b/kernel_imx/drivers/rtc/Makefile
old mode 100755
new mode 100644
index ca7f643..11bcbca
--- a/kernel_imx/drivers/rtc/Makefile
+++ b/kernel_imx/drivers/rtc/Makefile
@@ -114,3 +114,5 @@ obj-$(CONFIG_RTC_DRV_MXC_V2)    += rtc-mxc_v2.o
 obj-$(CONFIG_RTC_DRV_MC34708)	+= rtc-mc34708.o
 obj-$(CONFIG_RTC_DRV_SNVS)    += rtc-snvs.o
 obj-$(CONFIG_RTC_DRV_DA9052)	+= rtc-da9052.o
+obj-$(CONFIG_RTC_DRV_RX8010)    += rtc-rx8010.o
+
diff --git a/kernel_imx/drivers/rtc/rtc-da9052.c b/kernel_imx/drivers/rtc/rtc-da9052.c
old mode 100755
new mode 100644
diff --git a/kernel_imx/drivers/rtc/rtc-rx8010.c b/kernel_imx/drivers/rtc/rtc-rx8010.c
new file mode 100644
index 0000000..c14e5f9
--- /dev/null
+++ b/kernel_imx/drivers/rtc/rtc-rx8010.c
@@ -0,0 +1,785 @@
+//======================================================================
+// Driver for the Epson RTC module RX-8010 SJ
+//
+// Copyright(C) SEIKO EPSON CORPORATION 2013. All rights reserved.
+//
+// Derived from RX-8025 driver:
+// Copyright (C) 2009 Wolfgang Grandegger <wg@grandegger.com>
+//
+// Copyright (C) 2005 by Digi International Inc.
+// All rights reserved.
+//
+// Modified by fengjh at rising.com.cn
+// <http://lists.lm-sensors.org/mailman/listinfo/lm-sensors>
+// 2006.11
+//
+// Code cleanup by Sergei Poselenov, <sposelenov@emcraft.com>
+// Converted to new style by Wolfgang Grandegger <wg@grandegger.com>
+// Alarm and periodic interrupt added by Dmitry Rakhchev <rda@emcraft.com>
+//
+//
+// This driver software is distributed as is, without any warranty of any kind,
+// either express or implied as further specified in the GNU Public License. This
+// software may be used and distributed according to the terms of the GNU Public
+// License, version 2 as published by the Free Software Foundation.
+// See the file COPYING in the main directory of this archive for more details.
+//
+// You should have received a copy of the GNU General Public License along with
+// this program. If not, see <http://www.gnu.org/licenses/>.
+//======================================================================
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/slab.h>
+#include <linux/init.h>
+#include <linux/bcd.h>
+#include <linux/i2c.h>
+#include <linux/list.h>
+#include <linux/rtc.h>
+
+// RX-8010 Register definitions
+#define RX8010_REG_SEC		0x10
+#define RX8010_REG_MIN		0x11
+#define RX8010_REG_HOUR		0x12
+#define RX8010_REG_WDAY		0x13
+#define RX8010_REG_MDAY		0x14
+#define RX8010_REG_MONTH	0x15
+#define RX8010_REG_YEAR		0x16
+// 0x17 is reserved
+#define RX8010_REG_ALMIN	0x18
+#define RX8010_REG_ALHOUR	0x19
+#define RX8010_REG_ALWDAY	0x1A
+#define RX8010_REG_TCOUNT0	0x1B
+#define RX8010_REG_TCOUNT1	0x1C
+#define RX8010_REG_EXT		0x1D
+#define RX8010_REG_FLAG		0x1E
+#define RX8010_REG_CTRL		0x1F
+#define RX8010_REG_USER0	0x20
+#define RX8010_REG_USER1	0x21
+#define RX8010_REG_USER2	0x22
+#define RX8010_REG_USER3	0x23
+#define RX8010_REG_USER4	0x24
+#define RX8010_REG_USER5	0x25
+#define RX8010_REG_USER6	0x26
+#define RX8010_REG_USER7	0x27
+#define RX8010_REG_USER8	0x28
+#define RX8010_REG_USER9	0x29
+#define RX8010_REG_USERA	0x2A
+#define RX8010_REG_USERB	0x2B
+#define RX8010_REG_USERC	0x2C
+#define RX8010_REG_USERD	0x2D
+#define RX8010_REG_USERE	0x2E
+#define RX8010_REG_USERF	0x2F
+// 0x30 is reserved
+// 0x31 is reserved
+#define RX8010_REG_IRQ		0x32
+
+// Extension Register (1Dh) bit positions
+#define RX8010_BIT_EXT_TSEL		(7 << 0)
+#define RX8010_BIT_EXT_WADA		(1 << 3)
+#define RX8010_BIT_EXT_TE		(1 << 4)
+#define RX8010_BIT_EXT_USEL		(1 << 5)
+#define RX8010_BIT_EXT_FSEL		(3 << 6)
+
+// Flag Register (1Eh) bit positions
+#define RX8010_BIT_FLAG_VLF		(1 << 1)
+#define RX8010_BIT_FLAG_AF		(1 << 3)
+#define RX8010_BIT_FLAG_TF		(1 << 4)
+#define RX8010_BIT_FLAG_UF		(1 << 5)
+
+// Control Register (1Fh) bit positions
+#define RX8010_BIT_CTRL_TSTP	(1 << 2)
+#define RX8010_BIT_CTRL_AIE		(1 << 3)
+#define RX8010_BIT_CTRL_TIE		(1 << 4)
+#define RX8010_BIT_CTRL_UIE		(1 << 5)
+#define RX8010_BIT_CTRL_STOP	(1 << 6)
+#define RX8010_BIT_CTRL_TEST	(1 << 7)
+
+
+static const struct i2c_device_id rx8010_id[] = {
+	{ "rx8010", 0 },
+	{ }
+};
+MODULE_DEVICE_TABLE(i2c, rx8010_id);
+
+struct rx8010_data {
+	struct i2c_client *client;
+	struct rtc_device *rtc;
+	struct work_struct work;
+	u8 ctrlreg;
+	unsigned exiting:1;
+};
+
+
+//----------------------------------------------------------------------
+// rx8010_read_reg()
+// reads a rx8010 register (see Register defines)
+// See also rx8010_read_regs() to read multiple registers.
+//
+//----------------------------------------------------------------------
+static int rx8010_read_reg(struct i2c_client *client, int number, u8 *value)
+{
+	int ret = i2c_smbus_read_byte_data(client, number) ;
+
+	//check for error
+	if (ret < 0) {
+		dev_err(&client->dev, "Unable to read register #%d\n", number);
+		return ret;
+	}
+
+	*value = ret;
+	return 0;
+}
+
+//----------------------------------------------------------------------
+// rx8010_read_regs()
+// reads a specified number of rx8010 registers (see Register defines)
+// See also rx8010_read_reg() to read single register.
+//
+//----------------------------------------------------------------------
+static int rx8010_read_regs(struct i2c_client *client, int number, u8 length, u8 *values)
+{
+	int ret = i2c_smbus_read_i2c_block_data(client, number, length, values);
+
+	//check for length error
+	if (ret != length) {
+		dev_err(&client->dev, "Unable to read registers #%d..#%d\n", number, number + length - 1);
+		return ret < 0 ? ret : -EIO;
+	}
+
+	return 0;
+}
+
+//----------------------------------------------------------------------
+// rx8010_write_reg()
+// writes a rx8010 register (see Register defines)
+// See also rx8010_write_regs() to write multiple registers.
+//
+//----------------------------------------------------------------------
+static int rx8010_write_reg(struct i2c_client *client, int number, u8 value)
+{
+	int ret = i2c_smbus_write_byte_data(client, number, value);
+
+	//check for error
+	if (ret)
+		dev_err(&client->dev, "Unable to write register #%d\n", number);
+
+	return ret;
+}
+
+//----------------------------------------------------------------------
+// rx8010_write_regs()
+// writes a specified number of rx8010 registers (see Register defines)
+// See also rx8010_write_reg() to write a single register.
+//
+//----------------------------------------------------------------------
+static int rx8010_write_regs(struct i2c_client *client, int number, u8 length, u8 *values)
+{
+	int ret = i2c_smbus_write_i2c_block_data(client, number, length, values);
+
+	//check for error
+	if (ret)
+		dev_err(&client->dev, "Unable to write registers #%d..#%d\n", number, number + length - 1);
+
+	return ret;
+}
+
+//----------------------------------------------------------------------
+// rx8010_irq()
+// irq handler
+//
+//----------------------------------------------------------------------
+static irqreturn_t rx8010_irq(int irq, void *dev_id)
+{
+	struct i2c_client *client = dev_id;
+	struct rx8010_data *rx8010 = i2c_get_clientdata(client);
+
+	disable_irq_nosync(irq);
+	schedule_work(&rx8010->work);
+	return IRQ_HANDLED;
+}
+
+//----------------------------------------------------------------------
+// rx8010_work()
+//
+//----------------------------------------------------------------------
+static void rx8010_work(struct work_struct *work)
+{
+	struct rx8010_data *rx8010 = container_of(work, struct rx8010_data, work);
+	struct i2c_client *client = rx8010->client;
+	struct mutex *lock = &rx8010->rtc->ops_lock;
+	u8 status;
+
+	mutex_lock(lock);
+
+	if (rx8010_read_reg(client, RX8010_REG_FLAG, &status))
+		goto out;
+
+	// check VLF
+	if ((status & RX8010_BIT_FLAG_VLF))
+		dev_warn(&client->dev, "Oscillation stop was detected,"
+			 "you may have to readjust the clock\n");
+
+	// periodic "fixed-cycle" timer
+	if (status & RX8010_BIT_FLAG_TF) {
+		status &= ~RX8010_BIT_FLAG_TF;
+		local_irq_disable();
+		rtc_update_irq(rx8010->rtc, 1, RTC_PF | RTC_IRQF);
+		local_irq_enable();
+	}
+
+	// alarm function
+	if (status & RX8010_BIT_FLAG_AF) {
+		status &= ~RX8010_BIT_FLAG_AF;
+		local_irq_disable();
+		rtc_update_irq(rx8010->rtc, 1, RTC_AF | RTC_IRQF);
+		local_irq_enable();
+	}
+
+	// time update function
+	if (status & RX8010_BIT_FLAG_UF) {
+		status &= ~RX8010_BIT_FLAG_UF;
+		local_irq_disable();
+		rtc_update_irq(rx8010->rtc, 1, RTC_UF | RTC_IRQF);
+		local_irq_enable();
+	}
+
+	// acknowledge IRQ
+	rx8010_write_reg(client, RX8010_REG_FLAG, status);		//clear flags
+
+out:
+	if (!rx8010->exiting)
+		enable_irq(client->irq);
+
+	mutex_unlock(lock);
+}
+
+//----------------------------------------------------------------------
+// rx8010_get_time()
+// gets the current time from the rx8010 registers
+//
+//----------------------------------------------------------------------
+static int rx8010_get_time(struct device *dev, struct rtc_time *dt)
+{
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+	u8 date[7];
+	int err;
+
+	err = rx8010_read_regs(rx8010->client, RX8010_REG_SEC, 7, date);
+	if (err)
+		return err;
+
+	dev_dbg(dev, "%s: read 0x%02x 0x%02x "
+		"0x%02x 0x%02x 0x%02x 0x%02x 0x%02x\n", __func__,
+		date[0], date[1], date[2], date[3], date[4], date[5], date[6]);
+
+	//Note: need to subtract 0x10 for index as register offset starts at 0x10
+	dt->tm_sec = bcd2bin(date[RX8010_REG_SEC-0x10] & 0x7f);
+	dt->tm_min = bcd2bin(date[RX8010_REG_MIN-0x10] & 0x7f);
+	dt->tm_hour = bcd2bin(date[RX8010_REG_HOUR-0x10] & 0x3f);	//only 24-hour clock
+	dt->tm_mday = bcd2bin(date[RX8010_REG_MDAY-0x10] & 0x3f);
+	dt->tm_mon = bcd2bin(date[RX8010_REG_MONTH-0x10] & 0x1f) - 1;
+	dt->tm_year = bcd2bin(date[RX8010_REG_YEAR-0x10]);
+	dt->tm_wday = bcd2bin(date[RX8010_REG_WDAY-0x10] & 0x7f);
+
+	if (dt->tm_year < 70)
+		dt->tm_year += 100;
+
+	dev_dbg(dev, "%s: date %ds %dm %dh %dmd %dm %dy\n", __func__,
+		dt->tm_sec, dt->tm_min, dt->tm_hour,
+		dt->tm_mday, dt->tm_mon, dt->tm_year);
+
+	return rtc_valid_tm(dt);
+}
+
+//----------------------------------------------------------------------
+// rx8010_set_time()
+// Sets the current time in the rx8010 registers
+//
+// BUG: The HW assumes every year that is a multiple of 4 to be a leap
+// year. Next time this is wrong is 2100, which will not be a leap year
+//
+// Note: If STOP is not set/cleared, the clock will start when the seconds
+//       register is written
+//
+//----------------------------------------------------------------------
+static int rx8010_set_time(struct device *dev, struct rtc_time *dt)
+{
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+	u8 date[7];
+	u8 ctrl;
+	int ret;
+
+	//set STOP bit before changing clock/calendar
+	rx8010_read_reg(rx8010->client, RX8010_REG_CTRL, &ctrl);
+	rx8010->ctrlreg = ctrl | RX8010_BIT_CTRL_STOP;
+	rx8010_write_reg(rx8010->client, RX8010_REG_CTRL, rx8010->ctrlreg);
+
+	//Note: need to subtract 0x10 for index as register offset starts at 0x10
+	date[RX8010_REG_SEC-0x10] = bin2bcd(dt->tm_sec);
+	date[RX8010_REG_MIN-0x10] = bin2bcd(dt->tm_min);
+	date[RX8010_REG_HOUR-0x10] = bin2bcd(dt->tm_hour);		//only 24hr time
+
+	date[RX8010_REG_MDAY-0x10] = bin2bcd(dt->tm_mday);
+	date[RX8010_REG_MONTH-0x10] = bin2bcd(dt->tm_mon + 1);
+	date[RX8010_REG_YEAR-0x10] = bin2bcd(dt->tm_year % 100);
+	date[RX8010_REG_WDAY-0x10] = bin2bcd(dt->tm_wday);
+
+	dev_dbg(dev, "%s: write 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x\n",
+		__func__, date[0], date[1], date[2], date[3], date[4], date[5], date[6]);
+
+	ret =  rx8010_write_regs(rx8010->client, RX8010_REG_SEC, 7, date);
+
+	//clear STOP bit after changing clock/calendar
+	rx8010_read_reg(rx8010->client, RX8010_REG_CTRL, &ctrl);
+	rx8010->ctrlreg = ctrl & ~RX8010_BIT_CTRL_STOP;
+	rx8010_write_reg(rx8010->client, RX8010_REG_CTRL, rx8010->ctrlreg);
+
+	return ret;
+}
+
+//----------------------------------------------------------------------
+// rx8010_init_client()
+// initializes the rx8010
+//
+//----------------------------------------------------------------------
+static int rx8010_init_client(struct i2c_client *client, int *need_reset)
+{
+	struct rx8010_data *rx8010 = i2c_get_clientdata(client);
+	u8 ctrl[3];
+	int need_clear = 0;
+	int err;
+
+	//set reserved register 0x17 with specified value of 0xD8
+	err = rx8010_write_reg(client, 0x17, 0xD8);
+	if (err)
+		goto out;
+
+	//set reserved register 0x30 with specified value of 0x00
+	err = rx8010_write_reg(client, 0x30, 0x00);
+	if (err)
+		goto out;
+
+	//set reserved register 0x31 with specified value of 0x08
+	err = rx8010_write_reg(client, 0x30, 0x08);
+	if (err)
+		goto out;
+
+	//get current extension, flag, control register values
+	err = rx8010_read_regs(rx8010->client, RX8010_REG_EXT, 3, ctrl);
+	if (err)
+		goto out;
+
+	//set extension register, TE to 0, FSEL1-0 and TSEL2-0 for desired frequency
+	ctrl[0] &= ~RX8010_BIT_EXT_TE;			//set TE to 0
+	ctrl[0] &= ~RX8010_BIT_EXT_FSEL;		//set to 0 (off) for this case
+	ctrl[0] |= 0x02;						//set TSEL for 1Hz 
+	err = rx8010_write_reg(client, RX8010_REG_EXT, ctrl[0]);
+	if (err)
+		goto out;
+
+	//set "test bit" and reserved bits of control register zero
+	rx8010->ctrlreg = (ctrl[2] & ~RX8010_BIT_CTRL_TEST) & 0xFC;		//bits 1-0 are reseved
+
+	//check for VLF Flag (set at power-on)
+	if ((ctrl[1] & RX8010_BIT_FLAG_VLF)) {
+		dev_warn(&client->dev, "VLF Flag set,"
+			 "you may have to re-adjust the clock\n");
+		*need_reset = 1;
+	}
+
+	//check for Alarm Flag
+	if (ctrl[1] & RX8010_BIT_FLAG_AF) {
+		dev_warn(&client->dev, "Alarm was detected\n");
+		need_clear = 1;
+	}
+
+	//check for Periodic Timer Flag
+	if (ctrl[1] & RX8010_BIT_FLAG_TF) {
+		dev_warn(&client->dev, "Periodic timer was detected\n");
+		need_clear = 1;
+	}
+
+	//check for Update Timer Flag
+	if (ctrl[1] & RX8010_BIT_FLAG_UF) {
+		dev_warn(&client->dev, "Update timer was detected\n");
+		need_clear = 1;
+	}
+
+	//reset or clear needed?
+	if (*need_reset || need_clear) {
+		//clear flag register
+		err = rx8010_write_reg(client, RX8010_REG_FLAG, 0x00);
+		if (err)
+			goto out;
+
+		//clear ctrl register
+		err = rx8010_write_reg(client, RX8010_REG_CTRL, 0x00);
+		if (err)
+			goto out;
+	}
+out:
+	return err;
+}
+
+//----------------------------------------------------------------------
+// rx8010_read_alarm()
+// reads current Alarm
+//
+// Notes: - currently filters the AE bits (bit 7)
+//        - assumes WADA setting is week (week/day)
+//----------------------------------------------------------------------
+static int rx8010_read_alarm(struct device *dev, struct rtc_wkalrm *t)
+{
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+	struct i2c_client *client = rx8010->client;
+	u8 alarmvals[3];		//minute, hour, week/day values
+	u8 ctrl[3];				//extension, flag, control values
+	int err;
+
+	if (client->irq <= 0)
+		return -EINVAL;
+
+	//get current minute, hour, week/day alarm values
+	err = rx8010_read_regs(client, RX8010_REG_ALMIN, 3, alarmvals);
+	if (err)
+		return err;
+	dev_dbg(dev, "%s: minutes:0x%02x hours:0x%02x week/day:0x%02x\n",
+		__func__, alarmvals[0], alarmvals[1], alarmvals[2]);
+
+
+	//get current extension, flag, control register values
+	err = rx8010_read_regs(client, RX8010_REG_EXT, 3, ctrl);
+	if (err)
+		return err;
+	dev_dbg(dev, "%s: extension:0x%02x flag:0x%02x control:0x%02x \n",
+		__func__, ctrl[0], ctrl[1], ctrl[2]);
+
+	// Hardware alarm precision is 1 minute
+	t->time.tm_sec = 0;
+	t->time.tm_min = bcd2bin(alarmvals[0] & 0x7f);		//0x7f filters AE bit currently
+	t->time.tm_hour = bcd2bin(alarmvals[1] & 0x3f);		//0x3f filters AE bit currently, also 24hr only
+
+	t->time.tm_wday = -1;
+	t->time.tm_mday = -1;
+	t->time.tm_mon = -1;
+	t->time.tm_year = -1;
+
+	dev_dbg(dev, "%s: date: %ds %dm %dh %dmd %dm %dy\n",
+		__func__,
+		t->time.tm_sec, t->time.tm_min, t->time.tm_hour,
+		t->time.tm_mday, t->time.tm_mon, t->time.tm_year);
+
+	t->enabled = !!(rx8010->ctrlreg & RX8010_BIT_CTRL_AIE);		//check if interrupt is enabled
+	t->pending = (ctrl[1] & RX8010_BIT_FLAG_AF) && t->enabled;	//check if flag is triggered
+
+	return err;
+}
+
+//----------------------------------------------------------------------
+// rx8010_set_alarm()
+// sets Alarm
+//
+// Notes: - currently filters the AE bits (bit 7)
+//        - assumes WADA setting is week (week/day)
+//----------------------------------------------------------------------
+static int rx8010_set_alarm(struct device *dev, struct rtc_wkalrm *t)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+	u8 alarmvals[3];		//minute, hour, day
+	u8 extreg;				//extension register
+	u8 flagreg;				//flag register
+	int err;
+
+	if (client->irq <= 0)
+		return -EINVAL;
+
+	//get current extension register
+	err = rx8010_read_reg(client, RX8010_REG_EXT, &extreg);
+	if (err <0)
+		return err;
+
+	//get current flag register
+	err = rx8010_read_reg(client, RX8010_REG_FLAG, &flagreg);
+	if (err <0)
+		return err;
+
+	// Hardware alarm precision is 1 minute
+	alarmvals[0] = bin2bcd(t->time.tm_min);
+	alarmvals[1] = bin2bcd(t->time.tm_hour);
+	alarmvals[2] = bin2bcd(t->time.tm_mday);
+	dev_dbg(dev, "%s: write 0x%02x 0x%02x 0x%02x\n", __func__, alarmvals[0], alarmvals[1], alarmvals[2]);
+
+	//check interrupt enable and disable
+	if (rx8010->ctrlreg & RX8010_BIT_CTRL_AIE) {
+		rx8010->ctrlreg &= ~RX8010_BIT_CTRL_AIE;
+		err = rx8010_write_reg(rx8010->client, RX8010_REG_CTRL, rx8010->ctrlreg);
+		if (err)
+			return err;
+	}
+
+	//write the new minute and hour values
+	//Note:assume minute and hour values will be enabled. Bit 7 of each of the
+	//     minute, hour, week/day register can be set which will "disable" the
+	//     register from triggering an alarm. See the RX8010 spec for more information
+	err = rx8010_write_regs(rx8010->client, RX8010_REG_ALMIN, 2, alarmvals);
+	if (err)
+		return err;
+
+	//set Week/Day bit
+	// Week setting is typically not used, so we will assume "day" setting
+	extreg |= RX8010_BIT_EXT_WADA;		//set to "day of month"
+	err = rx8010_write_reg(rx8010->client, RX8010_REG_EXT, extreg);
+	if (err)
+		return err;
+
+	//set Day of Month register
+	if (alarmvals[2] == 0) {
+		alarmvals[2] |= 0x80;	//turn on AE bit to ignore day of month (no zero day)
+		err = rx8010_write_reg(rx8010->client, RX8010_REG_ALWDAY, alarmvals[2]);
+	}
+	else {
+		err = rx8010_write_reg(rx8010->client, RX8010_REG_ALWDAY, alarmvals[2]);
+	}
+	if (err)
+		return err;
+
+	//clear Alarm Flag
+	flagreg &= ~RX8010_BIT_FLAG_AF;
+	err = rx8010_write_reg(rx8010->client, RX8010_REG_FLAG, flagreg);
+	if (err)
+		return err;
+
+	//re-enable interrupt if required
+	if (t->enabled) {
+		rx8010->ctrlreg |= RX8010_BIT_CTRL_AIE;		//set alarm interrupt enable
+		err = rx8010_write_reg(rx8010->client, RX8010_REG_CTRL, rx8010->ctrlreg);
+		if (err)
+			return err;
+	}
+
+	return 0;
+}
+
+//----------------------------------------------------------------------
+// rx8010_alarm_irq_enable()
+// sets enables Alarm IRQ
+//
+// Todo: -
+//
+//----------------------------------------------------------------------
+static int rx8010_alarm_irq_enable(struct device *dev, unsigned int enabled)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+	u8 flagreg;
+	u8 ctrl;
+	int err;
+
+	//get the current ctrl settings
+	ctrl = rx8010->ctrlreg;
+
+	if (enabled)
+		ctrl |= RX8010_BIT_CTRL_AIE;		//set the AIE
+	else
+		ctrl &= ~RX8010_BIT_CTRL_AIE;		//clear the AIE
+
+	//clear alarm flag
+	err = rx8010_read_reg(client, RX8010_REG_FLAG, &flagreg);
+	if (err <0)
+		return err;
+	flagreg &= ~RX8010_BIT_FLAG_AF;
+	err = rx8010_write_reg(rx8010->client, RX8010_REG_FLAG, flagreg);
+	if (err)
+		return err;
+
+	//update the Control register if the setting changed
+	if (ctrl != rx8010->ctrlreg) {
+		rx8010->ctrlreg = ctrl;
+		err = rx8010_write_reg(rx8010->client, RX8010_REG_CTRL, rx8010->ctrlreg);
+		if (err)
+			return err;
+	}
+	return 0;
+}
+
+//----------------------------------------------------------------------
+// rx8010_ioctl()
+// ioctl routine for the rx8010 driver
+// example of how ioctls would be implemented
+//
+// Note: this routine is included as an example and should be removed if
+//       not implemented
+//----------------------------------------------------------------------
+static int rx8010_ioctl(struct device *dev, unsigned int cmd, unsigned long arg)
+{
+	struct rx8010_data *rx8010 = dev_get_drvdata(dev);
+
+	u8 ctrl[3];		//store Extension, Flag, Control regs
+	int err = 0;
+
+	//get current extension, flag, control register values
+	err = rx8010_read_regs(rx8010->client, RX8010_REG_EXT, 3, ctrl);
+	if (err)
+		return err;
+
+	//do some stuff to the registers based on the cmd
+	switch (cmd) {
+	case 0:
+		//i.e. change setting;
+		break;
+	case 1:
+		//i.e. clear flag
+		break;
+	default:
+		err = -ENOIOCTLCMD;
+	}
+
+	//write back the modified registers
+	err = rx8010_write_regs(rx8010->client, RX8010_REG_EXT, 3, ctrl);
+	if (err)
+		return err;
+
+	return err;
+}
+
+static struct rtc_class_ops rx8010_rtc_ops = {
+	.read_time = rx8010_get_time,
+	.set_time = rx8010_set_time,
+	.read_alarm = rx8010_read_alarm,
+	.set_alarm = rx8010_set_alarm,
+	.alarm_irq_enable = rx8010_alarm_irq_enable,
+	.ioctl			= rx8010_ioctl,					//remove if ioctls are not implemented
+};
+
+
+//----------------------------------------------------------------------
+// rx8010_probe()
+// probe routine for the rx8010 driver
+//
+// Todo: - maybe change kzalloc to use devm_kzalloc
+//       -
+//----------------------------------------------------------------------
+static int rx8010_probe(struct i2c_client *client, const struct i2c_device_id *id)
+{
+	struct i2c_adapter *adapter = to_i2c_adapter(client->dev.parent);
+	struct rx8010_data *rx8010;
+	int err, need_reset = 0;
+
+	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA | I2C_FUNC_SMBUS_I2C_BLOCK)) {
+		dev_err(&adapter->dev, "doesn't support required functionality\n");
+		err = -EIO;
+		goto errout;
+	}
+
+	rx8010 = kzalloc(sizeof(*rx8010), GFP_KERNEL);
+	if (!rx8010) {
+		dev_err(&adapter->dev, "failed to alloc memory\n");
+		err = -ENOMEM;
+		goto errout;
+	}
+
+	rx8010->client = client;
+	i2c_set_clientdata(client, rx8010);
+	INIT_WORK(&rx8010->work, rx8010_work);
+
+	err = rx8010_init_client(client, &need_reset);
+	if (err)
+		goto errout_free;
+
+	if (need_reset) {
+		struct rtc_time tm;
+		dev_info(&client->dev, "bad conditions detected, resetting date\n");
+		rtc_time_to_tm(0, &tm);		// set to 1970/1/1
+		rx8010_set_time(&client->dev, &tm);
+	}
+
+	rx8010->rtc = rtc_device_register(client->name, &client->dev, &rx8010_rtc_ops, THIS_MODULE);
+	if (IS_ERR(rx8010->rtc)) {
+		err = PTR_ERR(rx8010->rtc);
+		dev_err(&client->dev, "unable to register the class device\n");
+		goto errout_free;
+	}
+
+	if (client->irq > 0) {
+		dev_info(&client->dev, "IRQ %d supplied\n", client->irq);
+		err = request_irq(client->irq, rx8010_irq, 0, "rx8010", client);
+		if (err) {
+			dev_err(&client->dev, "unable to request IRQ\n");
+			goto errout_reg;
+		}
+	}
+
+	rx8010->rtc->irq_freq = 1;
+	rx8010->rtc->max_user_freq = 1;
+
+	return 0;
+
+//	if (client->irq > 0)
+//		free_irq(client->irq, client);
+
+errout_reg:
+	rtc_device_unregister(rx8010->rtc);
+
+errout_free:
+	kfree(rx8010);
+
+errout:
+	dev_err(&adapter->dev, "probing for rx8010 failed\n");
+	return err;
+}
+
+
+
+//----------------------------------------------------------------------
+// rx8010_remove()
+// remove routine for the rx8010 driver
+//
+// Todo: - maybe change kzalloc to devm_kzalloc
+//       -
+//----------------------------------------------------------------------
+static int rx8010_remove(struct i2c_client *client)
+{
+	struct rx8010_data *rx8010 = i2c_get_clientdata(client);
+	struct mutex *lock = &rx8010->rtc->ops_lock;
+
+	if (client->irq > 0) {
+		mutex_lock(lock);
+		rx8010->exiting = 1;
+		mutex_unlock(lock);
+
+		free_irq(client->irq, client);
+		cancel_work_sync(&rx8010->work);
+	}
+
+	rtc_device_unregister(rx8010->rtc);
+	kfree(rx8010);
+	return 0;
+}
+
+static struct i2c_driver rx8010_driver = {
+	.driver = {
+		.name = "rtc-rx8010",
+		.owner = THIS_MODULE,
+	},
+	.probe		= rx8010_probe,
+	.remove		= rx8010_remove,
+	.id_table	= rx8010_id,
+};
+
+static int __init rx8010_init(void)
+{
+	return i2c_add_driver(&rx8010_driver);
+}
+
+static void __exit rx8010_exit(void)
+{
+	i2c_del_driver(&rx8010_driver);
+}
+
+module_init(rx8010_init);
+module_exit(rx8010_exit);
+
+MODULE_AUTHOR("Dennis Henderson <henderson.dennis@erd.epson.com>");
+MODULE_DESCRIPTION("RX-8010 SJ RTC driver");
+MODULE_LICENSE("GPL");
diff --git a/kernel_imx/drivers/video/mxc/ldb.c b/kernel_imx/drivers/video/mxc/ldb.c
index 3b83019..d02eb70 100644
--- a/kernel_imx/drivers/video/mxc/ldb.c
+++ b/kernel_imx/drivers/video/mxc/ldb.c
@@ -127,6 +127,26 @@ static struct fb_videomode ldb_modedb[] = {
 	 0,
 	 FB_VMODE_NONINTERLACED,
 	 FB_MODE_IS_DETAILED,},
+	{
+	 "WVGA", 60, 800, 480, 37037,
+	 40, 40, 10, 3,
+	 100, 20,
+	 0,
+	 FB_VMODE_NONINTERLACED,
+	 FB_MODE_IS_DETAILED,},
+	{
+	 "SVGA", 60, 800, 600, 25000,
+	 210, 46,12, 23, 20, 10,
+	 0,
+	 FB_VMODE_NONINTERLACED,
+	 0,},
+	{
+	 "WGA", 60, 1368, 768, 11696,
+	 40, 40, 10, 3,
+	 80, 10,
+	 0,
+	 FB_VMODE_NONINTERLACED,
+	 FB_MODE_IS_DETAILED,},
 };
 static int ldb_modedb_sz = ARRAY_SIZE(ldb_modedb);
 
diff --git a/kernel_imx/drivers/video/mxc/mxc_lcdif.c b/kernel_imx/drivers/video/mxc/mxc_lcdif.c
index 5cbdc73..c5da569 100644
--- a/kernel_imx/drivers/video/mxc/mxc_lcdif.c
+++ b/kernel_imx/drivers/video/mxc/mxc_lcdif.c
@@ -28,6 +28,21 @@ struct mxc_lcdif_data {
 
 static struct fb_videomode lcdif_modedb[] = {
 	{
+	 "LCD_1080P", 60, 1920, 1080, 7692,
+	 100, 40,
+	 30, 3,
+	 10, 2,
+	 0,
+	 FB_VMODE_NONINTERLACED,
+	 FB_MODE_IS_DETAILED,},
+	{
+	 "LCD_WVGA", 60, 1280, 720, 14065,
+	 40, 40, 10, 3,
+	 80, 10,
+	 0,
+	 FB_VMODE_NONINTERLACED,
+	 FB_MODE_IS_DETAILED,},
+	{
 	/* 800x480 @ 57 Hz , pixel clk @ 27MHz */
 	"CLAA-WVGA", 57, 800, 480, 37037, 40, 60, 10, 10, 20, 10,
 	FB_SYNC_CLK_LAT_FALL,
-- 
1.9.1

